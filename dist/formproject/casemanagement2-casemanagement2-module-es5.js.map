{"version":3,"sources":["casemanagement2-casemanagement2-module-es5.js","webpack:///src/app/casemanagement2/management2/management2.component.html","webpack:///src/app/casemanagement2/casemanagement2-routing.module.ts","webpack:///src/app/casemanagement2/casemanagement2.module.ts","webpack:///src/app/casemanagement2/management2/management2.component.scss","webpack:///src/app/casemanagement2/management2/management2.component.ts"],"names":[],"mappings":"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","file":"x","sourcesContent":["(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[\"casemanagement2-casemanagement2-module\"],{\n\n/***/ \"./node_modules/raw-loader/dist/cjs.js!./src/app/casemanagement2/management2/management2.component.html\":\n/*!**************************************************************************************************************!*\\\n  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/casemanagement2/management2/management2.component.html ***!\n  \\**************************************************************************************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"<div class=\\\"container\\\">\\n  <!-- <div class=\\\"image-header\\\">\\n    <img src=\\\"http://www.icloud8.net/cmlc/images/logo.png\\\" alt=\\\"\\\" />\\n  </div> -->\\n  <form [formGroup]=\\\"caseform\\\" autocomplete=\\\"off\\\" (ngSubmit)=\\\"onSubmit()\\\" style=\\\"margin-top: 50px\\\">\\n    <mat-card class=\\\"main casemag\\\">\\n      <ng-container *transloco=\\\"let t\\\" >\\n        <mat-card-header>\\n          <mat-card-title style=\\\"min-height: 40px; margin: 0;\\\"\\n            ><mat-icon>dashboard</mat-icon> Case Management List\\n          </mat-card-title>\\n          <mat-button-toggle-group\\n            name=\\\"fontStyle\\\"\\n            aria-label=\\\"Font Style\\\"\\n            style=\\\"margin-right: 5px;\\\"\\n            fxHide.lt-md\\n            class=\\\"langgroup\\\"\\n          >\\n            <mat-button-toggle value=\\\"en\\\" (click)=\\\"setActiveLang('en')\\\"\\n              >EN</mat-button-toggle\\n            >\\n            <mat-button-toggle value=\\\"jp\\\" (click)=\\\"setActiveLang('jp')\\\"\\n              >JP</mat-button-toggle\\n            > </mat-button-toggle-group\\n          ><button mat-raised-button color=\\\"accent\\\" type=\\\"button\\\" style=\\\"margin-right: 5px;\\\">\\n            <mat-icon>cloud_download</mat-icon> \\n            <span fxHide.lt-md>{{ t('CSV_CREATE') }}</span>\\n          </button> <button mat-raised-button color=\\\"accent\\\" type=\\\"submit\\\"  (click)=\\\"hideformele()\\\">\\n            <mat-icon>search</mat-icon>\\n            <span fxHide.lt-md>{{ t('SEARCH') }}</span>\\n          </button>\\n        </mat-card-header>\\n       \\n      </ng-container>\\n      <div\\n        fxLayout=\\\"row wrap\\\"\\n        fxLayout.xs=\\\"column\\\"\\n        fxLayoutAlign.gt-sm=\\\"space-around center\\\"\\n        style=\\\"text-align: center; margin-bottom: 20px;\\\"\\n        fxHide.gt-sm\\n      >\\n        <div fxFlex=\\\"0 0 100%\\\">\\n          <mat-button-toggle-group\\n            name=\\\"fontStyle\\\"\\n            aria-label=\\\"Font Style\\\"\\n            style=\\\"margin-right: 5px;\\\"\\n          >\\n            <mat-button-toggle value=\\\"en\\\" (click)=\\\"setActiveLang('en')\\\"\\n              >EN</mat-button-toggle\\n            >\\n            <mat-button-toggle value=\\\"jp\\\" (click)=\\\"setActiveLang('jp')\\\"\\n              >JP</mat-button-toggle\\n            >\\n          </mat-button-toggle-group>\\n        </div>\\n      </div>\\n\\n      <ng-container *transloco=\\\"let t\\\" >\\n        <div\\n          fxLayout=\\\"row wrap\\\"\\n          fxLayout.xs=\\\"column\\\"\\n          fxLayoutAlign.gt-sm=\\\"space-around center\\\"\\n          *ngIf=\\\"hideitem\\\"\\n        >\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <label>{{ t('CLASSIF') }}*</label>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <mat-form-field>\\n              <mat-select formControlName=\\\"classification\\\">\\n                <mat-option value=\\\"{{ t('C_MGMT') }}\\\">{{\\n                  t('C_MGMT')\\n                }}</mat-option>\\n                <mat-option value=\\\"{{ t('Legal_C_M') }}\\\">{{\\n                  t('Legal_C_M')\\n                }}</mat-option>\\n                <mat-option value=\\\"{{ t('LEGAL_BOTH') }}\\\">{{\\n                  t('LEGAL_BOTH')\\n                }}</mat-option>\\n              </mat-select>\\n              <mat-error\\n                *ngIf=\\\"\\n                  caseform.get('classification').errors &&\\n                  caseform.get('classification').errors.required\\n                \\\"\\n                >Please fill up the field</mat-error\\n              >\\n            </mat-form-field>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <label>{{ t('CONTITEM') }}</label>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"\\\" formControlName=\\\"controlnumber\\\" />\\n            </mat-form-field>\\n          </div>\\n        </div>\\n      </ng-container>\\n      <ng-container *transloco=\\\"let t\\\">\\n        <div\\n          fxLayout=\\\"row wrap\\\"\\n          fxLayout.xs=\\\"column\\\"\\n          fxLayoutAlign.gt-sm=\\\"space-around center\\\"\\n          *ngIf=\\\"hideitem\\\"\\n        >\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <label>{{ t('LDPD') }}</label>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <mat-form-field>\\n              <input\\n                matInput\\n                [matDatepicker]=\\\"recpdate\\\"\\n                formControlName=\\\"recpdate\\\"\\n              />\\n              <mat-datepicker-toggle\\n                matSuffix\\n                [for]=\\\"recpdate\\\"\\n              ></mat-datepicker-toggle>\\n              <mat-datepicker #recpdate></mat-datepicker>\\n            </mat-form-field>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <label>{{ t('APPL_DATE') }}*</label>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <mat-form-field>\\n              <input\\n                matInput\\n                [matDatepicker]=\\\"appdate\\\"\\n                formControlName=\\\"appdate\\\"\\n              />\\n              <mat-datepicker-toggle\\n                matSuffix\\n                [for]=\\\"appdate\\\"\\n              ></mat-datepicker-toggle>\\n              <mat-datepicker #appdate></mat-datepicker>\\n              <mat-error\\n                *ngIf=\\\"\\n                  caseform.get('appdate').errors &&\\n                  !caseform.get('appdate').errors.matDatepickerParse &&\\n                  caseform.get('appdate').errors.required\\n                \\\"\\n                >Please fill up the field</mat-error\\n              >\\n              <mat-error\\n                *ngIf=\\\"\\n                  caseform.get('appdate').errors &&\\n                  caseform.get('appdate').errors.matDatepickerParse\\n                \\\"\\n                >Please enter a valid date</mat-error\\n              >\\n            </mat-form-field>\\n          </div>\\n        </div>\\n      </ng-container>\\n      <ng-container *transloco=\\\"let t\\\" >\\n        <div\\n          fxLayout=\\\"row wrap\\\"\\n          fxLayout.xs=\\\"column\\\"\\n          fxLayoutAlign.gt-sm=\\\"space-around center\\\"\\n          *ngIf=\\\"hideitem\\\"\\n        >\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <label>{{ t('APPLY_F_DEPT') }}</label>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"\\\" formControlName=\\\"appdept\\\" />\\n            </mat-form-field>\\n            <div class=\\\"button-row\\\">\\n              <button\\n                type=\\\"button\\\"\\n                mat-raised-button\\n                color=\\\"primary\\\"\\n                class=\\\"gradient-primary\\\"\\n              >\\n                <mat-icon>link</mat-icon> {{ t('REFERENCE') }}\\n              </button>\\n              <button\\n                type=\\\"button\\\"\\n                mat-raised-button\\n                color=\\\"warn\\\"\\n                class=\\\"gradient-warn\\\"\\n              >\\n                <mat-icon>clear</mat-icon> {{ t('CLEAR') }}\\n              </button>\\n            </div>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <label>{{ t('APPLICANT') }}*</label>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"\\\" formControlName=\\\"applicant\\\" />\\n              <mat-error\\n                *ngIf=\\\"\\n                  caseform.get('applicant').errors &&\\n                  caseform.get('applicant').errors.required\\n                \\\"\\n                >Please fill up the field</mat-error\\n              >\\n            </mat-form-field>\\n            <div class=\\\"button-row\\\">\\n              <button\\n                type=\\\"button\\\"\\n                mat-raised-button\\n                color=\\\"primary\\\"\\n                class=\\\"gradient-primary\\\"\\n              >\\n                <mat-icon>link</mat-icon> {{ t('REFERENCE') }}\\n              </button>\\n              <button\\n                type=\\\"button\\\"\\n                mat-raised-button\\n                color=\\\"warn\\\"\\n                class=\\\"gradient-warn\\\"\\n              >\\n                <mat-icon>clear</mat-icon> {{ t('CLEAR') }}\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n      </ng-container>\\n      <ng-container *transloco=\\\"let t\\\">\\n        <div\\n          fxLayout=\\\"row wrap\\\"\\n          fxLayout.xs=\\\"column\\\"\\n          fxLayoutAlign.gt-sm=\\\"space-around center\\\"\\n          *ngIf=\\\"hideitem\\\"\\n        >\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <label>{{ t('CONTRACT_NAME') }}</label>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"\\\" formControlName=\\\"applicant\\\" />\\n            </mat-form-field>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <label>{{ t('CONTRACT_ITEM') }}</label>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"\\\" formControlName=\\\"contracteditem\\\" />\\n            </mat-form-field>\\n          </div>\\n        </div>\\n      </ng-container>\\n      <ng-container *transloco=\\\"let t\\\" >\\n        <div\\n          fxLayout=\\\"row wrap\\\"\\n          fxLayout.xs=\\\"column\\\"\\n          fxLayoutAlign.gt-sm=\\\"space-around center\\\"\\n          *ngIf=\\\"hideitem\\\"\\n        >\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <label>{{ t('SECTION_MEMBER') }}*</label>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <mat-checkbox\\n              (change)=\\\"show_inc_app_sec($event)\\\"\\n              class=\\\"chk-margin\\\"\\n              formControlName=\\\"inc_app_sec_memberyes\\\"\\n              >{{ t('TRUE') }}</mat-checkbox\\n            >\\n            <mat-checkbox\\n              (change)=\\\"show_inc_app_sec($event)\\\"\\n              class=\\\"chk-margin\\\"\\n              formControlName=\\\"inc_app_sec_memberno\\\"\\n              >{{ t('FALSE') }}</mat-checkbox\\n            >\\n            <mat-error class=\\\"incerror\\\" *ngIf=\\\"inc_app_sec_member_error\\\"\\n              >Select atleast one</mat-error\\n            >\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <label>{{ t('NEW_RENEWAL') }}</label>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <mat-form-field>\\n              <mat-select formControlName=\\\"new_renew\\\" name=\\\"new_renew\\\">\\n                <mat-option value=\\\"new\\\">{{ t('NEW') }}</mat-option>\\n                <mat-option value=\\\"renewal\\\">{{ t('RENEWAL') }}</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n      </ng-container>\\n      <ng-container *transloco=\\\"let t\\\">\\n        <div\\n          fxLayout=\\\"row wrap\\\"\\n          fxLayout.xs=\\\"column\\\"\\n          fxLayoutAlign.gt-sm=\\\"space-around center\\\"\\n          *ngIf=\\\"hideitem\\\"\\n        >\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <label>{{ t('AUTOMATIC_UPDATE') }}</label>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <mat-form-field>\\n              <mat-select formControlName=\\\"autoupdate\\\" name=\\\"autoupdate\\\">\\n                <mat-option value=\\\"yes\\\">{{ t('YES') }}</mat-option>\\n                <mat-option value=\\\"no\\\">{{ t('NO') }}</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <label>{{ t('CONTRACT_TYPE') }}*</label>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <mat-form-field>\\n              <mat-select formControlName=\\\"contracttype\\\">\\n                <mat-option value=\\\"dummy1\\\">Dummy text</mat-option>\\n                <mat-option value=\\\"dummy2\\\">Renewal</mat-option>\\n              </mat-select>\\n              <mat-error\\n                *ngIf=\\\"\\n                  caseform.get('contracttype').errors &&\\n                  caseform.get('contracttype').errors.required\\n                \\\"\\n                >Please fill up the field</mat-error\\n              >\\n            </mat-form-field>\\n          </div>\\n        </div>\\n      </ng-container>\\n      <ng-container *transloco=\\\"let t\\\">\\n        <div\\n          fxLayout=\\\"row wrap\\\"\\n          fxLayout.xs=\\\"column\\\"\\n          fxLayoutAlign.gt-sm=\\\"space-around center\\\"\\n          *ngIf=\\\"hideitem\\\"\\n        >\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <label>{{ t('CONTRACTOR') }}</label>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"\\\" formControlName=\\\"contractor\\\" />\\n            </mat-form-field>\\n            <div class=\\\"button-row\\\">\\n              <button\\n                type=\\\"button\\\"\\n                mat-raised-button\\n                color=\\\"primary\\\"\\n                class=\\\"gradient-primary\\\"\\n              >\\n                <mat-icon>link</mat-icon> {{ t('REFERENCE') }}\\n              </button>\\n              <button\\n                type=\\\"button\\\"\\n                mat-raised-button\\n                color=\\\"warn\\\"\\n                class=\\\"gradient-warn\\\"\\n              >\\n                <mat-icon>clear</mat-icon> {{ t('CLEAR') }}\\n              </button>\\n            </div>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <label>{{ t('BEGINNING_DATE_OF_THE_CONTRACT') }}</label>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <mat-form-field>\\n              <input\\n                matInput\\n                [matDatepicker]=\\\"begcontperiod\\\"\\n                formControlName=\\\"begcontperiod\\\"\\n              />\\n              <mat-datepicker-toggle\\n                matSuffix\\n                [for]=\\\"begcontperiod\\\"\\n              ></mat-datepicker-toggle>\\n              <mat-datepicker #begcontperiod></mat-datepicker>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n      </ng-container>\\n      <ng-container *transloco=\\\"let t\\\">\\n        <div\\n          fxLayout=\\\"row wrap\\\"\\n          fxLayout.xs=\\\"column\\\"\\n          fxLayoutAlign.gt-sm=\\\"space-around center\\\"\\n          *ngIf=\\\"hideitem\\\"\\n        >\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <label>{{ t('END_DATE_OF_THE_CONTRACT') }}</label>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <mat-form-field>\\n              <input\\n                matInput\\n                [matDatepicker]=\\\"endcontperiod\\\"\\n                formControlName=\\\"endcontperiod\\\"\\n              />\\n              <mat-datepicker-toggle\\n                matSuffix\\n                [for]=\\\"endcontperiod\\\"\\n              ></mat-datepicker-toggle>\\n              <mat-datepicker #endcontperiod></mat-datepicker>\\n            </mat-form-field>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <label>{{ t('LEGAL_REPRESENTATIVE') }}</label>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <mat-form-field>\\n              <mat-select formControlName=\\\"legelrep\\\" name=\\\"legelrep\\\">\\n                <mat-option value=\\\"yes\\\">{{ t('YES') }}</mat-option>\\n                <mat-option value=\\\"no\\\">{{ t('NO') }}</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n      </ng-container>\\n      <ng-container *transloco=\\\"let t\\\">\\n        <div\\n          fxLayout=\\\"row wrap\\\"\\n          fxLayout.xs=\\\"column\\\"\\n          fxLayoutAlign.gt-sm=\\\"space-around center\\\"\\n          *ngIf=\\\"hideitem\\\"\\n        >\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <label>{{ t('FIX_VERSION_CONTRACT_ATTACHED') }}</label>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <mat-form-field>\\n              <mat-select\\n                formControlName=\\\"fix_ver_contract_att\\\"\\n                name=\\\"fix_ver_contract_att\\\"\\n              >\\n                <mat-option value=\\\"yes\\\">{{ t('YES') }}</mat-option>\\n                <mat-option value=\\\"no\\\">{{ t('NO') }}</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <label>{{ t('EXSISTANCE_OF_THE_EXTERNAL_CONSULTANT') }}</label>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <mat-form-field>\\n              <mat-select\\n                formControlName=\\\"exsist_extr_consult\\\"\\n                name=\\\"exsist_extr_consult\\\"\\n              >\\n                <mat-option value=\\\"yes\\\">{{ t('YES') }}</mat-option>\\n                <mat-option value=\\\"no\\\">{{ t('NO') }}</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n      </ng-container>\\n      <ng-container *transloco=\\\"let t\\\">\\n        <div\\n          fxLayout=\\\"row wrap\\\"\\n          fxLayout.xs=\\\"column\\\"\\n          fxLayoutAlign.gt-sm=\\\"space-around center\\\"\\n          *ngIf=\\\"hideitem\\\"\\n        >\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <label>{{ t('LEGAL_DEPARTMENT_NOTES') }}</label>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <mat-form-field>\\n              <input\\n                matInput\\n                placeholder=\\\"\\\"\\n                formControlName=\\\"legel_dept_notes\\\"\\n              />\\n            </mat-form-field>\\n          </div>\\n\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <label>{{ t('PNAME') }}</label>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"\\\" />\\n            </mat-form-field>\\n          </div>\\n        </div>\\n      </ng-container>\\n      <ng-container *transloco=\\\"let t\\\">\\n        <div\\n          fxLayout=\\\"row wrap\\\"\\n          fxLayout.xs=\\\"column\\\"\\n          fxLayoutAlign.gt-sm=\\\"space-around center\\\"\\n          *ngIf=\\\"hideitem\\\"\\n        >\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <label>{{ t('EXP_DATE_CONC') }}</label>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <mat-form-field>\\n              <input\\n                matInput\\n                [matDatepicker]=\\\"recpdate1\\\"\\n                formControlName=\\\"recpdate\\\"\\n              />\\n              <mat-datepicker-toggle\\n                matSuffix\\n                [for]=\\\"recpdate1\\\"\\n              ></mat-datepicker-toggle>\\n              <mat-datepicker #recpdate1></mat-datepicker>\\n            </mat-form-field>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <label>{{ t('ALERT_RELEASE_DATE') }}</label>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <mat-form-field>\\n              <input\\n                matInput\\n                [matDatepicker]=\\\"recpdate2\\\"\\n                formControlName=\\\"recpdate\\\"\\n              />\\n              <mat-datepicker-toggle\\n                matSuffix\\n                [for]=\\\"recpdate2\\\"\\n              ></mat-datepicker-toggle>\\n              <mat-datepicker #recpdate2></mat-datepicker>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n    </ng-container>\\n    <ng-container *transloco=\\\"let t\\\">\\n      <div\\n        fxLayout=\\\"row wrap\\\"\\n        fxLayout.xs=\\\"column\\\"\\n        fxLayoutAlign.gt-sm=\\\"space-around center\\\"\\n        *ngIf=\\\"hideitem\\\"\\n      >\\n        <div fxFlex=\\\"0 0 25%\\\">\\n          <label>{{ t('APPROVAL_DECISION_NUMBER') }}</label>\\n        </div>\\n        <div fxFlex=\\\"0 0 25%\\\">\\n          <mat-form-field>\\n            <input\\n              matInput\\n              placeholder=\\\"\\\"\\n              formControlName=\\\"legel_dept_notes\\\"\\n            />\\n          </mat-form-field>\\n        </div>\\n\\n        <div fxFlex=\\\"0 0 25%\\\">\\n          <label>{{ t('BRANCH_NUMBER') }}</label>\\n        </div>\\n        <div fxFlex=\\\"0 0 25%\\\">\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"\\\" />\\n          </mat-form-field>\\n        </div>\\n      </div>\\n    </ng-container>\\n      <ng-container *transloco=\\\"let t\\\">\\n        <div\\n          fxLayout=\\\"row wrap\\\"\\n          fxLayout.xs=\\\"column\\\"\\n          fxLayoutAlign.gt-sm=\\\"space-around start\\\"\\n          *ngIf=\\\"hideitem\\\"\\n          class=\\\"statusmargin\\\"\\n        >\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <label>{{ t('STATUS') }}</label>\\n          </div>\\n          <div fxFlex=\\\"0 0 75%\\\">\\n            <mat-checkbox formControlName=\\\"status_creating\\\">{{\\n              t('CREATING')\\n            }}</mat-checkbox\\n            >\\n            <mat-checkbox formControlName=\\\"status_receiving\\\">{{\\n              t('RECEIVING')\\n            }}</mat-checkbox\\n            >\\n            <mat-checkbox formControlName=\\\"status_app_responding\\\">{{\\n              t('APP_RESPOND')\\n            }}</mat-checkbox\\n            >\\n            <mat-checkbox formControlName=\\\"status_contract_signed\\\">{{\\n              t('CONTRACT_SIGN')\\n            }}</mat-checkbox\\n            >\\n            <mat-checkbox formControlName=\\\"status_cancelled\\\">{{\\n              t('CANCELLED')\\n            }}</mat-checkbox\\n            >\\n            <mat-checkbox formControlName=\\\"status_requesting\\\">{{\\n              t('REQUESTING')\\n            }}</mat-checkbox\\n            >\\n            <mat-checkbox formControlName=\\\"status_correspond_legl_dept\\\">{{\\n              t('CTLDEPT')\\n            }}</mat-checkbox\\n            >\\n            <mat-checkbox formControlName=\\\"status_resp_legl_dept\\\">{{\\n              t('RTLDEPT')\\n            }}</mat-checkbox\\n            >\\n            <mat-checkbox formControlName=\\\"status_completed\\\">{{\\n              t('COMPLETED')\\n            }}</mat-checkbox>\\n          </div>\\n\\n          <!-- <div fxFlex=\\\"0 0 50%\\\">\\n            <mat-checkbox formControlName=\\\"status_requesting\\\">{{\\n              t('REQUESTING')\\n            }}</mat-checkbox\\n            ><br />\\n            <mat-checkbox formControlName=\\\"status_correspond_legl_dept\\\">{{\\n              t('CTLDEPT')\\n            }}</mat-checkbox\\n            ><br />\\n            <mat-checkbox formControlName=\\\"status_resp_legl_dept\\\">{{\\n              t('RTLDEPT')\\n            }}</mat-checkbox\\n            ><br />\\n            <mat-checkbox formControlName=\\\"status_completed\\\">{{\\n              t('COMPLETED')\\n            }}</mat-checkbox\\n            ><br />\\n          </div> -->\\n        </div>\\n      </ng-container>\\n      <ng-container *transloco=\\\"let t\\\">\\n        <div\\n        fxLayout=\\\"row wrap\\\"\\n        fxLayout.xs=\\\"column\\\"\\n        fxLayoutAlign.gt-sm=\\\"space-around start\\\"\\n        style=\\\"margin-top: 20px;\\\"\\n        *ngIf=\\\"hideitem\\\"\\n      >\\n        <div fxFlex=\\\"0 0 25%\\\">\\n          <label>{{ t('RELATED_COUNTRIES') }} </label>\\n        </div>\\n        <div fxFlex=\\\"0 0 75%\\\">\\n          <mat-checkbox class=\\\"country-margin\\\" formControlName=\\\"country_korea\\\">{{\\n            t('JAPAN')\\n          }}</mat-checkbox>\\n          <mat-checkbox\\n            class=\\\"country-margin\\\"\\n            formControlName=\\\"country_china\\\"\\n            >{{ t('US') }}</mat-checkbox\\n          >\\n          <mat-checkbox\\n            class=\\\"country-margin\\\"\\n            formControlName=\\\"country_korea\\\"\\n            >{{ t('CHINA') }}</mat-checkbox\\n          >\\n          <mat-checkbox\\n            class=\\\"country-margin\\\"\\n            formControlName=\\\"country_europe\\\"\\n            >{{ t('TAIWAN') }}</mat-checkbox\\n          >\\n          <mat-checkbox\\n            class=\\\"country-margin\\\"\\n            formControlName=\\\"country_tiwan\\\"\\n            >{{ t('INDIA') }}</mat-checkbox\\n          >\\n          <mat-checkbox\\n            class=\\\"country-margin\\\"\\n            formControlName=\\\"country_india\\\"\\n            >{{ t('EUROPE') }}</mat-checkbox\\n          >\\n          <mat-checkbox\\n            class=\\\"country-margin\\\"\\n            formControlName=\\\"country_others\\\"\\n            >{{ t('OTHERS') }}</mat-checkbox\\n          >\\n        </div>\\n\\n       \\n      </div>\\n      </ng-container>\\n      <ng-container *transloco=\\\"let t\\\">\\n        <div\\n          fxLayout=\\\"row wrap\\\"\\n          fxLayout.xs=\\\"column\\\"\\n          fxLayoutAlign=\\\"space-around center\\\"\\n          style=\\\"margin-top: 10px;\\\"\\n          *ngIf=\\\"hideitem\\\"\\n        >\\n          <div fxFlex=\\\"0 0 100%\\\">\\n            <button mat-raised-button color=\\\"accent\\\" (click)=\\\"hideformele()\\\">\\n              <mat-icon>search</mat-icon> {{ t('SEARCH') }}\\n            </button>\\n          </div>\\n        </div>\\n      </ng-container>\\n      <ng-container *transloco=\\\"let t\\\">\\n        <div\\n          fxLayout=\\\"row wrap\\\"\\n          fxLayout.xs=\\\"column\\\"\\n          fxLayoutAlign=\\\"space-around center\\\"\\n          style=\\\"margin-top: 10px;\\\"\\n          *ngIf=\\\"!hideitem\\\"\\n        >\\n          <div fxFlex=\\\"0 0 100%\\\">\\n            <button mat-raised-button color=\\\"accent\\\" (click)=\\\"showformele()\\\">\\n              <mat-icon>close</mat-icon> {{ t('CLOSE') }}\\n            </button>\\n          </div>\\n        </div>\\n      </ng-container>\\n      <mat-card class=\\\"dataset\\\">\\n        <div class=\\\"card-icon\\\">\\n          Case Management List\\n        </div>\\n        <ng-container *transloco=\\\"let t\\\">\\n          <div\\n            fxLayout=\\\"row wrap\\\"\\n            fxLayout.xs=\\\"column\\\"\\n            fxLayoutAlign=\\\"space-around center\\\"\\n            style=\\\"margin-top: 10px;\\\"\\n          >\\n            <div fxFlex=\\\"0 0 100%\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"margintop\\\">\\n              <div class=\\\"onmobile\\\">\\n                <span\\n                  >{{ t('THE_TOALNOFC') }}:\\n                  <mat-chip color=\\\"primary\\\" selected>11</mat-chip></span\\n                >\\n                <!-- <button\\n                  type=\\\"button\\\"\\n                  mat-raised-button\\n                  color=\\\"primary\\\"\\n                  class=\\\"gradient-success mr-1\\\"\\n                >\\n                  <mat-icon>cloud_download</mat-icon> {{ t('CSV_CREATE') }}\\n                </button>\\n                <button\\n                  type=\\\"button\\\"\\n                  mat-raised-button\\n                  color=\\\"primary\\\"\\n                  class=\\\"gradient-indigo\\\"\\n                >\\n                  <mat-icon>print</mat-icon> {{ t('PRINT') }}\\n                </button> -->\\n              </div>\\n            </div>\\n          </div>\\n        </ng-container>\\n        <div\\n          fxLayout=\\\"row wrap\\\"\\n          fxLayout.xs=\\\"column\\\"\\n          fxLayoutAlign=\\\"space-around center\\\"\\n          style=\\\"margin-top: 10px;\\\"\\n          fxHide.lt-md\\n          class=\\\"only-desktop\\\"\\n          *transloco=\\\"let t\\\"\\n        >\\n          <div fxFlex=\\\"0 0 100%\\\">\\n            <div class=\\\"datatable-container mat-elevation-z1\\\">\\n              <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"casetable\\\"  matSort (matSortChange)=\\\"sortData($event)\\\">\\n                <!-- Controlnumber Column -->\\n\\n                <ng-container\\n                  matColumnDef=\\\"Controlnumber\\\"\\n                  sticky\\n                  *transloco=\\\"let t\\\"\\n                >\\n                  <th mat-header-cell *matHeaderCellDef style=\\\"width: 40px;\\\" mat-sort-header=\\\"Controlnumber\\\">\\n                    {{ t('CONTROL_NUMBER') }}\\n                  </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width: 40px;\\\">\\n                    {{ element.Controlnumber }}\\n                  </td>\\n                </ng-container>\\n\\n                <!-- BranchNumber Column -->\\n                <ng-container matColumnDef=\\\"BranchNumber\\\" sticky>\\n                  <th mat-header-cell *matHeaderCellDef style=\\\"width: 40px;\\\" mat-sort-header=\\\"BranchNumber\\\">\\n                    {{ t('BRANCH_NUMBER') }}\\n                  </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width: 40px;\\\">\\n                    {{ element.BranchNumber }}\\n                  </td>\\n                </ng-container>\\n\\n                <!-- ApplicationDate Column -->\\n                <!-- <ng-container matColumnDef=\\\"ApplicationDate\\\" sticky>\\n                  <th mat-header-cell *matHeaderCellDef style=\\\"width: 40px;\\\">\\n                    {{ t('APPL_DATE') }}\\n                  </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width: 40px;\\\">\\n                    <mat-chip-list aria-label=\\\"ApplicationDate\\\">\\n                      <mat-chip color=\\\"accent\\\" selected class=\\\"chipred\\\"\\n                        >{{ element.ApplicationDate }}\\n                      </mat-chip>\\n                    </mat-chip-list>\\n                  </td>\\n                </ng-container> -->\\n\\n                <!-- Applicant Column -->\\n                <!-- <ng-container matColumnDef=\\\"Applicant\\\" sticky>\\n                  <th mat-header-cell *matHeaderCellDef style=\\\"width: 40px;\\\">\\n                    {{ t('APPLICANT') }}\\n                  </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width: 40px;\\\">\\n                    {{ element.Applicant }}\\n                  </td>\\n                </ng-container> -->\\n\\n                <!-- ApplicationDate Column -->\\n                <ng-container matColumnDef=\\\"ApplicationDate\\\" sticky>\\n                  <th mat-header-cell *matHeaderCellDef style=\\\"width: 40px;\\\" mat-sort-header=\\\"ApplicationDate\\\">\\n                    {{ t('APPL_DATE') }}\\n                  </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width: 40px;\\\">\\n                    {{ element.ApplicationDate }}\\n                  </td>\\n                </ng-container>\\n\\n                     <!-- Status Column -->\\n                     <ng-container matColumnDef=\\\"Status\\\" sticky>\\n                      <th mat-header-cell *matHeaderCellDef style=\\\"width: 40px;\\\" mat-sort-header=\\\"ContractName\\\">{{ t('STATUS') }}</th>\\n                      <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width: 40px;\\\">\\n                        {{ element.Status }}\\n                      </td>\\n                    </ng-container>\\n\\n                <!-- ContractName Column -->\\n                <ng-container matColumnDef=\\\"ContractName\\\" sticky>\\n                  <th mat-header-cell *matHeaderCellDef style=\\\"width: 40px;\\\" mat-sort-header=\\\"Status\\\">\\n                    {{ t('CONTRACT_NAME') }}\\n                  </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width: 40px;\\\">\\n                    <span *ngIf=\\\"element.BranchNumber != 3 && element.BranchNumber != 4\\\">{{element.ContractName}}</span>\\n                    <div\\n                      class=\\\"popover__wrapper\\\"\\n                      *ngIf=\\\"\\n                        element.BranchNumber == 3 || element.BranchNumber == 4\\n                      \\\"\\n                    >\\n                      <a href=\\\"#\\\">\\n                        <h2 class=\\\"popover__title\\\">\\n                          {{ element.ContractName }}...<mat-icon class=\\\"iconfix\\\"\\n                            >screen_share</mat-icon\\n                          >\\n                        </h2>\\n                      </a>\\n                      <div class=\\\"popover__content\\\">\\n                        <p class=\\\"popover__message\\\">Dummy Text</p>\\n                        <p>\\n                          Lorem Ipsum is simply dummy text of the printing and\\n                          typesetting industry. Lorem Ipsum has been the\\n                          industry's standard dummy text ever since the 1500s.\\n                        </p>\\n                      </div>\\n                    </div>\\n                  </td>\\n                </ng-container>\\n\\n                <!-- otherparty Column -->\\n                <ng-container matColumnDef=\\\"OtherParty\\\" sticky>\\n                  <th mat-header-cell *matHeaderCellDef style=\\\"width: 40px;\\\" mat-sort-header=\\\"OtherParty\\\">\\n                    {{ t('OTHER_PARTY') }}\\n                  </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width: 40px;\\\">\\n                    {{ element.OtherParty }}\\n                  </td>\\n                </ng-container>\\n\\n                <!-- Applicantdivision Column -->\\n                <ng-container matColumnDef=\\\"Applicantdivision\\\" >\\n                  <th mat-header-cell *matHeaderCellDef style=\\\"width: 40px;\\\" mat-sort-header=\\\"Applicantdivision\\\">\\n                    {{ t('APP_DIVI') }}\\n                  </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width: 40px;\\\">\\n                    {{ element.Applicantdivision }}\\n                  </td>\\n                </ng-container> \\n\\n                <!-- Applicationdepartment Column -->\\n                <ng-container matColumnDef=\\\"Applicationdepartment\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"Applicationdepartment\\\">\\n                    {{ t('APPLY_F_DEPT') }}\\n                  </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\">\\n                    {{ element.Applicationdepartment }}\\n                  </td>\\n                </ng-container>\\n                <!-- Applicant Column -->\\n                <ng-container matColumnDef=\\\"Applicant\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"Applicant\\\">\\n                    {{ t('APPLICANT') }}\\n                  </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\">\\n                    {{ element.Applicant }}\\n                  </td>\\n                </ng-container>\\n\\n                <!-- LegalRepresentative Column -->\\n                <ng-container matColumnDef=\\\"LegalRepresentative\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"LegalRepresentative\\\">\\n                    {{ t('LEGAL_REPRESENTATIVE') }}\\n                  </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\">\\n                    {{ element.LegalRepresentative }}\\n                  </td>\\n                </ng-container>\\n\\n           \\n\\n                <!-- Contractperiod Column -->\\n                <ng-container matColumnDef=\\\"Contractperiod\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"Contractperiod\\\">\\n                    {{ t('CONT_PERIOD') }}\\n                  </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\" >\\n                    {{ element.Contractperiod }}\\n                  </td>\\n                </ng-container>\\n\\n                <!-- Contractperiodend Column -->\\n                <ng-container matColumnDef=\\\"Contractperiodend\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"Contractperiodend\\\">\\n                    {{ t('CONT_PERIOD_END') }}\\n                  </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\">\\n                    {{ element.Contractperiodend }}\\n                  </td>\\n                </ng-container>\\n                  <!-- Automaticupdate Column -->\\n                  <ng-container matColumnDef=\\\"Automaticupdate\\\">\\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"Automaticupdate\\\">\\n                      {{ t('AUTOMATIC_UPDATE') }}\\n                    </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\">\\n                      {{ element.Automaticupdate }}\\n                    </td>\\n                  </ng-container>\\n                  \\n              \\n              <!-- Relatedcountries Column -->\\n               <ng-container matColumnDef=\\\"Relatedcountries\\\">\\n                <th mat-header-cell *matHeaderCellDef  mat-sort-header=\\\"Relatedcountries\\\">\\n                  {{ t('RELATED_COUNTRIES') }}\\n                </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">\\n                  {{ element.Relatedcountries }}\\n                </td>\\n              </ng-container>\\n\\n               <!-- ProjectName Column -->\\n               <ng-container matColumnDef=\\\"ProjectName\\\">\\n                <th mat-header-cell *matHeaderCellDef  mat-sort-header=\\\"ProjectName\\\">\\n                  {{ t('PNAME') }}\\n                </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">\\n                  {{ element.ProjectName }}\\n                </td>\\n              </ng-container>\\n\\n               <!-- ContractType Column -->\\n               <ng-container matColumnDef=\\\"ContractType\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"ContractType\\\">\\n                  {{ t('CONTRACT_TYPE') }}\\n                </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">\\n                  {{ element.ContractType }}\\n                </td>\\n              </ng-container>\\n              \\n              <!-- Externalconsultation Column -->\\n              <ng-container matColumnDef=\\\"Externalconsultation\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"Externalconsultation\\\">\\n                  {{ t('EXTCONSULTANT') }}\\n                </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">\\n                  {{ element.Externalconsultation }}\\n                </td>\\n              </ng-container>\\n\\n               <!-- Contracteditem Column -->\\n               <ng-container matColumnDef=\\\"Contracteditem\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"Contracteditem\\\">\\n                  {{ t('CONTITEM') }}\\n                </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">\\n                  {{ element.Contracteditem }}\\n                </td>\\n              </ng-container>\\n             \\n              <!-- Newongoing Column -->\\n              <ng-container matColumnDef=\\\"Newongoing\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"Newongoing\\\">\\n                  {{ t('NEWONGOING') }}\\n                </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">\\n                  {{ element.Newongoing }}\\n                </td>\\n              </ng-container>\\n            \\n            <!-- Alertreleasedate Column -->\\n             <ng-container matColumnDef=\\\"Alertreleasedate\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"Alertreleasedate\\\">\\n                {{ t('ALERT_RELEASE_DATE') }}\\n              </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">\\n                {{ element.Alertreleasedate }}\\n              </td>\\n            </ng-container>\\n\\n            <!-- Relatedcontractnumber Column -->\\n            <ng-container matColumnDef=\\\"Relatedcontractnumber\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"Relatedcontractnumber\\\">\\n                {{ t('RELATE_CONTRACT_NUMBER') }}\\n              </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">\\n                {{ element.Relatedcontractnumber }}\\n              </td>\\n            </ng-container>\\n           \\n            <!-- Expecteddateofconsultion Column -->\\n            <ng-container matColumnDef=\\\"Expecteddateofconsultion\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"Expecteddateofconsultion\\\">\\n                {{ t('CONC_OF_S_D') }}\\n              </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">\\n                {{ element.Expecteddateofconsultion }}\\n              </td>\\n            </ng-container>\\n\\n             <!-- FIXContract Column -->\\n             <ng-container matColumnDef=\\\"FIXContract\\\">\\n              <th mat-header-cell *matHeaderCellDef  mat-sort-header=\\\"FIXContract\\\">\\n                {{ t('FIXCONTRACT') }}\\n              </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">\\n                {{ element.FIXContract }}\\n              </td>\\n            </ng-container>\\n          \\n          <!-- Approvaldecisionnumber Column -->\\n          <ng-container matColumnDef=\\\"Approvaldecisionnumber\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"Approvaldecisionnumber\\\">\\n              {{ t('APPROVAL_DECISION_NUMBER') }}\\n            </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\n              {{ element.Approvaldecisionnumber }}\\n            </td>\\n          </ng-container>\\n\\n           <!-- Managementstatus Column -->\\n           <ng-container matColumnDef=\\\"Managementstatus\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"Managementstatus\\\">\\n              {{ t('MANAGEMENT_STATE') }}\\n            </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\n              {{ element.Managementstatus }}\\n            </td>\\n          </ng-container>\\n          \\n          <!-- Legaldepartmentreceptiondate Column -->\\n          <ng-container matColumnDef=\\\"Legaldepartmentreceptiondate\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"Legaldepartmentreceptiondate\\\">\\n              {{ t('LDPD') }}\\n            </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\n              {{ element.Legaldepartmentreceptiondate }}\\n            </td>\\n          </ng-container>\\n           <!-- Legaldepartmentresponsedeadline Column -->\\n           <ng-container matColumnDef=\\\"Legaldepartmentresponsedeadline\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"Legaldepartmentresponsedeadline\\\">\\n              {{ t('LDRD') }}\\n            </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\n              {{ element.Legaldepartmentresponsedeadline }}\\n            </td>\\n          </ng-container>\\n                <!-- Remarks Column -->\\n                <!-- <ng-container matColumnDef=\\\"Remarks\\\">\\n                  <th mat-header-cell *matHeaderCellDef>{{ t('REMARKS') }}</th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\">\\n                    {{ element.Remarks }}\\n                  </td>\\n                </ng-container> -->\\n\\n                <!-- SecurityCaseClassification Column -->\\n                <!-- <ng-container matColumnDef=\\\"SecurityCaseClassification\\\">\\n                  <th mat-header-cell *matHeaderCellDef>\\n                    {{ t('SEC_CASE_CLASSIF') }}\\n                  </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\">\\n                    {{ element.SecurityCaseClassification }}\\n                  </td>\\n                </ng-container> -->\\n\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                <tr\\n                  mat-row\\n                  *matRowDef=\\\"let row; let odd = odd; columns: displayedColumns\\\"\\n                  [ngClass]=\\\"{ gray: odd }\\\"\\n                >\\n                </tr>\\n              </table>\\n            </div>\\n            <!-- <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator> -->\\n          </div>\\n        </div>\\n        <div\\n        fxLayout=\\\"row wrap\\\"\\n        fxLayout.xs=\\\"column\\\"\\n        style=\\\"margin-top: 10px;\\\"\\n        fxHide.gt-sm\\n        class=\\\"only-mobile\\\"\\n        *transloco=\\\"let t\\\"\\n        >\\n        <div fxFlex=\\\"0 0 100%\\\">\\n          <div class=\\\"datatable-container mat-elevation-z1\\\">\\n            <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"casetable\\\">\\n              <!-- Controlnumber Column -->\\n        \\n              <ng-container\\n              matColumnDef=\\\"Controlnumber\\\"\\n              \\n              *transloco=\\\"let t\\\"\\n            >\\n              <th mat-header-cell *matHeaderCellDef style=\\\"width: 40px;\\\">\\n                {{ t('CONTROL_NUMBER') }}\\n              </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width: 40px;\\\">\\n                {{ element.Controlnumber }}\\n              </td>\\n            </ng-container>\\n        \\n            <!-- BranchNumber Column -->\\n            <ng-container matColumnDef=\\\"BranchNumber\\\" >\\n              <th mat-header-cell *matHeaderCellDef style=\\\"width: 40px;\\\">\\n                {{ t('BRANCH_NUMBER') }}\\n              </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width: 40px;\\\">\\n                {{ element.BranchNumber }}\\n              </td>\\n            </ng-container>\\n        \\n            <!-- ApplicationDate Column -->\\n            <!-- <ng-container matColumnDef=\\\"ApplicationDate\\\" sticky>\\n              <th mat-header-cell *matHeaderCellDef style=\\\"width: 40px;\\\">\\n                {{ t('APPL_DATE') }}\\n              </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width: 40px;\\\">\\n                <mat-chip-list aria-label=\\\"ApplicationDate\\\">\\n                  <mat-chip color=\\\"accent\\\" selected class=\\\"chipred\\\"\\n                    >{{ element.ApplicationDate }}\\n                  </mat-chip>\\n                </mat-chip-list>\\n              </td>\\n            </ng-container> -->\\n        \\n            <!-- Applicant Column -->\\n            <!-- <ng-container matColumnDef=\\\"Applicant\\\" sticky>\\n              <th mat-header-cell *matHeaderCellDef style=\\\"width: 40px;\\\">\\n                {{ t('APPLICANT') }}\\n              </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width: 40px;\\\">\\n                {{ element.Applicant }}\\n              </td>\\n            </ng-container> -->\\n        \\n            <!-- ApplicationDate Column -->\\n            <ng-container matColumnDef=\\\"ApplicationDate\\\">\\n              <th mat-header-cell *matHeaderCellDef style=\\\"width: 40px;\\\">\\n                {{ t('APPL_DATE') }}\\n              </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width: 40px;\\\">\\n                {{ element.ApplicationDate }}\\n              </td>\\n            </ng-container>\\n        \\n                 <!-- Status Column -->\\n                 <ng-container matColumnDef=\\\"Status\\\">\\n                  <th mat-header-cell *matHeaderCellDef style=\\\"width: 40px;\\\">{{ t('STATUS') }}</th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width: 40px;\\\">\\n                    {{ element.Status }}\\n                  </td>\\n                </ng-container>\\n        \\n            <!-- ContractName Column -->\\n            <ng-container matColumnDef=\\\"ContractName\\\">\\n              <th mat-header-cell *matHeaderCellDef style=\\\"width: 40px;\\\">\\n                {{ t('CONTRACT_NAME') }}\\n              </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width: 40px;\\\">\\n                <span *ngIf=\\\"element.BranchNumber != 3 && element.BranchNumber != 4\\\">{{element.ContractName}}</span>\\n                <div\\n                  class=\\\"popover__wrapper\\\"\\n                  *ngIf=\\\"\\n                    element.BranchNumber == 3 || element.BranchNumber == 4\\n                  \\\"\\n                >\\n                  <a href=\\\"#\\\">\\n                    <h2 class=\\\"popover__title\\\">\\n                      {{ element.ContractName }}...<mat-icon class=\\\"iconfix\\\"\\n                        >screen_share</mat-icon\\n                      >\\n                    </h2>\\n                  </a>\\n                  <div class=\\\"popover__content\\\">\\n                    <p class=\\\"popover__message\\\">Dummy Text</p>\\n                    <p>\\n                      Lorem Ipsum is simply dummy text of the printing and\\n                      typesetting industry. Lorem Ipsum has been the\\n                      industry's standard dummy text ever since the 1500s.\\n                    </p>\\n                  </div>\\n                </div>\\n              </td>\\n            </ng-container>\\n        \\n            <!-- otherparty Column -->\\n            <ng-container matColumnDef=\\\"OtherParty\\\">\\n              <th mat-header-cell *matHeaderCellDef style=\\\"width: 40px;\\\">\\n                {{ t('OTHER_PARTY') }}\\n              </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width: 40px;\\\">\\n                {{ element.OtherParty }}\\n              </td>\\n            </ng-container>\\n        \\n            <!-- Applicantdivision Column -->\\n            <ng-container matColumnDef=\\\"Applicantdivision\\\" >\\n              <th mat-header-cell *matHeaderCellDef style=\\\"width: 40px;\\\">\\n                {{ t('APP_DIVI') }}\\n              </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width: 40px;\\\">\\n                {{ element.Applicantdivision }}\\n              </td>\\n            </ng-container> \\n        \\n            <!-- Applicationdepartment Column -->\\n            <ng-container matColumnDef=\\\"Applicationdepartment\\\">\\n              <th mat-header-cell *matHeaderCellDef>\\n                {{ t('APPLY_F_DEPT') }}\\n              </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">\\n                {{ element.Applicationdepartment }}\\n              </td>\\n            </ng-container>\\n            <!-- Applicant Column -->\\n            <ng-container matColumnDef=\\\"Applicant\\\">\\n              <th mat-header-cell *matHeaderCellDef>\\n                {{ t('APPLICANT') }}\\n              </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">\\n                {{ element.Applicant }}\\n              </td>\\n            </ng-container>\\n        \\n            <!-- LegalRepresentative Column -->\\n            <ng-container matColumnDef=\\\"LegalRepresentative\\\">\\n              <th mat-header-cell *matHeaderCellDef>\\n                {{ t('LEGAL_REPRESENTATIVE') }}\\n              </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">\\n                {{ element.LegalRepresentative }}\\n              </td>\\n            </ng-container>\\n        \\n        \\n        \\n            <!-- Contractperiod Column -->\\n            <ng-container matColumnDef=\\\"Contractperiod\\\">\\n              <th mat-header-cell *matHeaderCellDef>\\n                {{ t('CONT_PERIOD') }}\\n              </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">\\n                {{ element.Contractperiod }}\\n              </td>\\n            </ng-container>\\n        \\n            <!-- Contractperiodend Column -->\\n            <ng-container matColumnDef=\\\"Contractperiodend\\\">\\n              <th mat-header-cell *matHeaderCellDef>\\n                {{ t('CONT_PERIOD_END') }}\\n              </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">\\n                {{ element.Contractperiodend }}\\n              </td>\\n            </ng-container>\\n              <!-- Automaticupdate Column -->\\n              <ng-container matColumnDef=\\\"Automaticupdate\\\">\\n                <th mat-header-cell *matHeaderCellDef>\\n                  {{ t('AUTOMATIC_UPDATE') }}\\n                </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">\\n                  {{ element.Automaticupdate }}\\n                </td>\\n              </ng-container>\\n              \\n          \\n          <!-- Relatedcountries Column -->\\n           <ng-container matColumnDef=\\\"Relatedcountries\\\">\\n            <th mat-header-cell *matHeaderCellDef>\\n              {{ t('RELATED_COUNTRIES') }}\\n            </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\n              {{ element.Relatedcountries }}\\n            </td>\\n          </ng-container>\\n        \\n           <!-- ProjectName Column -->\\n           <ng-container matColumnDef=\\\"ProjectName\\\">\\n            <th mat-header-cell *matHeaderCellDef>\\n              {{ t('PNAME') }}\\n            </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\n              {{ element.ProjectName }}\\n            </td>\\n          </ng-container>\\n        \\n           <!-- ContractType Column -->\\n           <ng-container matColumnDef=\\\"ContractType\\\">\\n            <th mat-header-cell *matHeaderCellDef>\\n              {{ t('CONTRACT_TYPE') }}\\n            </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\n              {{ element.ContractType }}\\n            </td>\\n          </ng-container>\\n          \\n          <!-- Externalconsultation Column -->\\n          <ng-container matColumnDef=\\\"Externalconsultation\\\">\\n            <th mat-header-cell *matHeaderCellDef>\\n              {{ t('EXTCONSULTANT') }}\\n            </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\n              {{ element.Externalconsultation }}\\n            </td>\\n          </ng-container>\\n        \\n           <!-- Contracteditem Column -->\\n           <ng-container matColumnDef=\\\"Contracteditem\\\">\\n            <th mat-header-cell *matHeaderCellDef>\\n              {{ t('CONTITEM') }}\\n            </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\n              {{ element.Contracteditem }}\\n            </td>\\n          </ng-container>\\n         \\n          <!-- Newongoing Column -->\\n          <ng-container matColumnDef=\\\"Newongoing\\\">\\n            <th mat-header-cell *matHeaderCellDef>\\n              {{ t('NEWONGOING') }}\\n            </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\n              {{ element.Newongoing }}\\n            </td>\\n          </ng-container>\\n        \\n        <!-- Alertreleasedate Column -->\\n         <ng-container matColumnDef=\\\"Alertreleasedate\\\">\\n          <th mat-header-cell *matHeaderCellDef>\\n            {{ t('ALERT_RELEASE_DATE') }}\\n          </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">\\n            {{ element.Alertreleasedate }}\\n          </td>\\n        </ng-container>\\n        \\n        <!-- Relatedcontractnumber Column -->\\n        <ng-container matColumnDef=\\\"Relatedcontractnumber\\\">\\n          <th mat-header-cell *matHeaderCellDef>\\n            {{ t('RELATE_CONTRACT_NUMBER') }}\\n          </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">\\n            {{ element.Relatedcontractnumber }}\\n          </td>\\n        </ng-container>\\n        \\n        <!-- Expecteddateofconsultion Column -->\\n        <ng-container matColumnDef=\\\"Expecteddateofconsultion\\\">\\n          <th mat-header-cell *matHeaderCellDef>\\n            {{ t('CONC_OF_S_D') }}\\n          </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">\\n            {{ element.Expecteddateofconsultion }}\\n          </td>\\n        </ng-container>\\n        \\n         <!-- FIXContract Column -->\\n         <ng-container matColumnDef=\\\"FIXContract\\\">\\n          <th mat-header-cell *matHeaderCellDef>\\n            {{ t('FIXCONTRACT') }}\\n          </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">\\n            {{ element.FIXContract }}\\n          </td>\\n        </ng-container>\\n        \\n        <!-- Approvaldecisionnumber Column -->\\n        <ng-container matColumnDef=\\\"Approvaldecisionnumber\\\">\\n        <th mat-header-cell *matHeaderCellDef>\\n          {{ t('APPROVAL_DECISION_NUMBER') }}\\n        </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\n          {{ element.Approvaldecisionnumber }}\\n        </td>\\n        </ng-container>\\n        \\n        <!-- Managementstatus Column -->\\n        <ng-container matColumnDef=\\\"Managementstatus\\\">\\n        <th mat-header-cell *matHeaderCellDef>\\n          {{ t('MANAGEMENT_STATE') }}\\n        </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\n          {{ element.Managementstatus }}\\n        </td>\\n        </ng-container>\\n        \\n        <!-- Legaldepartmentreceptiondate Column -->\\n        <ng-container matColumnDef=\\\"Legaldepartmentreceptiondate\\\">\\n        <th mat-header-cell *matHeaderCellDef>\\n          {{ t('LDPD') }}\\n        </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\n          {{ element.Legaldepartmentreceptiondate }}\\n        </td>\\n        </ng-container>\\n        <!-- Legaldepartmentresponsedeadline Column -->\\n        <ng-container matColumnDef=\\\"Legaldepartmentresponsedeadline\\\">\\n        <th mat-header-cell *matHeaderCellDef>\\n          {{ t('LDRD') }}\\n        </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\n          {{ element.Legaldepartmentresponsedeadline }}\\n        </td>\\n        </ng-container>\\n        \\n        \\n          \\n        \\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n              <tr\\n                mat-row\\n                *matRowDef=\\\"let row; let odd = odd; columns: displayedColumns\\\"\\n                [ngClass]=\\\"{ gray: odd }\\\"\\n              ></tr>\\n            </table>\\n          </div>\\n        </div>\\n        </div>\\n        <div\\n        fxLayout=\\\"row wrap\\\"\\n        fxLayout.xs=\\\"column\\\"\\n        fxLayoutAlign=\\\"space-around center\\\"\\n        style=\\\"margin-top: 10px;\\\"\\n        >\\n        <div fxFlex=\\\"0 0 100%\\\">\\n          <mat-paginator [length]=\\\"length\\\"\\n            [pageSize]=\\\"pageSize\\\"\\n            [pageSizeOptions]=\\\"pageSizeOptions\\\"\\n            (page)=\\\"pageEvent = $event\\\">\\n          </mat-paginator>\\n        </div>\\n        </div>\\n      </mat-card>\\n    </mat-card>\\n  </form>\\n</div>\\n\");\n\n/***/ }),\n\n/***/ \"./src/app/casemanagement2/casemanagement2-routing.module.ts\":\n/*!*******************************************************************!*\\\n  !*** ./src/app/casemanagement2/casemanagement2-routing.module.ts ***!\n  \\*******************************************************************/\n/*! exports provided: Casemanagement2RoutingModule */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Casemanagement2RoutingModule\", function() { return Casemanagement2RoutingModule; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ \"./node_modules/@angular/core/fesm2015/core.js\");\n/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ \"./node_modules/@angular/router/fesm2015/router.js\");\n/* harmony import */ var _management2_management2_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./management2/management2.component */ \"./src/app/casemanagement2/management2/management2.component.ts\");\n\n\n\n\nconst routes = [\n    {\n        path: '',\n        component: _management2_management2_component__WEBPACK_IMPORTED_MODULE_3__[\"Management2Component\"]\n    }\n];\nlet Casemanagement2RoutingModule = class Casemanagement2RoutingModule {\n};\nCasemanagement2RoutingModule = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"NgModule\"])({\n        imports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__[\"RouterModule\"].forChild(routes)],\n        exports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__[\"RouterModule\"]]\n    })\n], Casemanagement2RoutingModule);\n\n\n\n/***/ }),\n\n/***/ \"./src/app/casemanagement2/casemanagement2.module.ts\":\n/*!***********************************************************!*\\\n  !*** ./src/app/casemanagement2/casemanagement2.module.ts ***!\n  \\***********************************************************/\n/*! exports provided: Casemanagement2Module */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Casemanagement2Module\", function() { return Casemanagement2Module; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ \"./node_modules/@angular/core/fesm2015/core.js\");\n/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ \"./node_modules/@angular/common/fesm2015/common.js\");\n/* harmony import */ var _casemanagement2_routing_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./casemanagement2-routing.module */ \"./src/app/casemanagement2/casemanagement2-routing.module.ts\");\n/* harmony import */ var _management2_management2_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./management2/management2.component */ \"./src/app/casemanagement2/management2/management2.component.ts\");\n/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/forms */ \"./node_modules/@angular/forms/fesm2015/forms.js\");\n/* harmony import */ var _core_material_module__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../core/material.module */ \"./src/app/core/material.module.ts\");\n/* harmony import */ var _transloco_root_module__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../transloco-root.module */ \"./src/app/transloco-root.module.ts\");\n/* harmony import */ var _angular_flex_layout__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/flex-layout */ \"./node_modules/@angular/flex-layout/esm2015/flex-layout.js\");\n\n\n\n\n\n\n\n\n\nlet Casemanagement2Module = class Casemanagement2Module {\n};\nCasemanagement2Module = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"NgModule\"])({\n        declarations: [_management2_management2_component__WEBPACK_IMPORTED_MODULE_4__[\"Management2Component\"]],\n        imports: [\n            _angular_common__WEBPACK_IMPORTED_MODULE_2__[\"CommonModule\"],\n            _casemanagement2_routing_module__WEBPACK_IMPORTED_MODULE_3__[\"Casemanagement2RoutingModule\"],\n            _angular_forms__WEBPACK_IMPORTED_MODULE_5__[\"FormsModule\"], _angular_forms__WEBPACK_IMPORTED_MODULE_5__[\"ReactiveFormsModule\"],\n            _core_material_module__WEBPACK_IMPORTED_MODULE_6__[\"MaterialModule\"],\n            _transloco_root_module__WEBPACK_IMPORTED_MODULE_7__[\"TranslocoRootModule\"],\n            _angular_flex_layout__WEBPACK_IMPORTED_MODULE_8__[\"FlexLayoutModule\"]\n        ]\n    })\n], Casemanagement2Module);\n\n\n\n/***/ }),\n\n/***/ \"./src/app/casemanagement2/management2/management2.component.scss\":\n/*!************************************************************************!*\\\n  !*** ./src/app/casemanagement2/management2/management2.component.scss ***!\n  \\************************************************************************/\n/*! exports provided: default */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\".datatable-container {\\n  min-height: 0.01%;\\n  overflow-x: auto;\\n  overflow-y: hidden;\\n}\\n\\ntable {\\n  width: 100%;\\n  max-width: 100%;\\n  margin-bottom: 20px;\\n}\\n\\ntable.casetable {\\n  width: 2000px;\\n  max-width: inherit;\\n}\\n\\ntd.mat-column-star {\\n  width: 20px;\\n  padding-right: 8px;\\n}\\n\\n/* Popover styling */\\n\\na {\\n  text-decoration: none;\\n}\\n\\n.popover__title {\\n  font-size: 14px;\\n  text-decoration: none;\\n  color: rgba(0, 0, 0, 0.87);\\n  font-weight: 100;\\n}\\n\\n.popover__wrapper {\\n  position: relative;\\n  display: inline-block;\\n}\\n\\n.popover__content {\\n  opacity: 0;\\n  visibility: hidden;\\n  position: absolute;\\n  left: -69px;\\n  transform: translate(0, 10px);\\n  background-color: #fdfdfd;\\n  padding: 0.5rem 1rem 0 1rem;\\n  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.26);\\n  min-width: 270px;\\n  top: 55px;\\n  z-index: 9999;\\n}\\n\\n.popover__content:before {\\n  position: absolute;\\n  left: 50%;\\n  top: -8px;\\n  content: \\\"\\\";\\n  width: 15px;\\n  height: 15px;\\n  z-index: 9999;\\n  display: inline-block;\\n  background: #fff;\\n  margin-left: -7px;\\n  transform: rotate(45deg);\\n  -webkit-transform: rotate(45deg);\\n  -moz-transform: rotate(45deg);\\n  border-top: 1px solid #f3f0f0;\\n  border-left: 1px solid #f3f0f0;\\n  transition-duration: 0.3s;\\n  transition-property: transform;\\n}\\n\\n.popover__wrapper:hover .popover__content {\\n  z-index: 9999;\\n  opacity: 1;\\n  visibility: visible;\\n  transform: translate(0, -20px);\\n  transition: all 0.5s cubic-bezier(0.75, -0.02, 0.2, 0.97);\\n}\\n\\n.popover__message {\\n  border-bottom: 1px solid #ddd;\\n  font-weight: 500;\\n  text-align: left;\\n}\\n\\n.iconfix {\\n  top: 4px;\\n  position: relative;\\n  left: 5px;\\n  color: #00479d;\\n}\\n\\n.popover__content p {\\n  margin-bottom: 0px;\\n}\\n\\n.incerror {\\n  font-size: 75%;\\n  color: #f44336 !important;\\n  font-weight: 400;\\n}\\n\\n.mat-table > tbody > tr > td {\\n  z-index: 1 !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2phc2Jpci9EZXNrdG9wL1ByYWN0aWNlL25nZm9ybS9qYXBhbmlfZ2l0L2NtbGMtbWF0ZXJpYWwtbmV3L3NyYy9hcHAvY2FzZW1hbmFnZW1lbnQyL21hbmFnZW1lbnQyL21hbmFnZW1lbnQyLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9jYXNlbWFuYWdlbWVudDIvbWFuYWdlbWVudDIvbWFuYWdlbWVudDIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxpQkFBQTtFQUNBLGdCQUFBO0VBQ0Esa0JBQUE7QUNDRjs7QURHQTtFQUNFLFdBQUE7RUFDQSxlQUFBO0VBQ0EsbUJBQUE7QUNBRjs7QURFQTtFQUNFLGFBQUE7RUFDQSxrQkFBQTtBQ0NGOztBRENBO0VBQ0UsV0FBQTtFQUNBLGtCQUFBO0FDRUY7O0FEQ0Esb0JBQUE7O0FBRUE7RUFDRSxxQkFBQTtBQ0NGOztBREVBO0VBQ0UsZUFBQTtFQUNBLHFCQUFBO0VBQ0EsMEJBQUE7RUFDQSxnQkFBQTtBQ0NGOztBREVBO0VBQ0Usa0JBQUE7RUFDQSxxQkFBQTtBQ0NGOztBRENBO0VBQ0UsVUFBQTtFQUNBLGtCQUFBO0VBQ0Esa0JBQUE7RUFDQSxXQUFBO0VBQ0EsNkJBQUE7RUFDQSx5QkFBQTtFQUNBLDJCQUFBO0VBQ0EsMkNBQUE7RUFDQSxnQkFBQTtFQUNBLFNBQUE7RUFDQSxhQUFBO0FDRUY7O0FEQUE7RUFDRSxrQkFBQTtFQUNBLFNBQUE7RUFDQSxTQUFBO0VBQ0EsV0FBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0EsYUFBQTtFQUNBLHFCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxpQkFBQTtFQUNBLHdCQUFBO0VBQ0EsZ0NBQUE7RUFDQSw2QkFBQTtFQUNBLDZCQUFBO0VBQ0EsOEJBQUE7RUFDQSx5QkFBQTtFQUNBLDhCQUFBO0FDR0Y7O0FEREE7RUFDRSxhQUFBO0VBQ0EsVUFBQTtFQUNBLG1CQUFBO0VBQ0EsOEJBQUE7RUFDQSx5REFBQTtBQ0lGOztBREZBO0VBQ0UsNkJBQUE7RUFDQSxnQkFBQTtFQUNBLGdCQUFBO0FDS0Y7O0FESEE7RUFDRSxRQUFBO0VBQ0Esa0JBQUE7RUFDQSxTQUFBO0VBQ0EsY0FBQTtBQ01GOztBREpBO0VBQ0Usa0JBQUE7QUNPRjs7QURMQTtFQUNFLGNBQUE7RUFDQSx5QkFBQTtFQUNBLGdCQUFBO0FDUUY7O0FETEE7RUFDRSxxQkFBQTtBQ1FGIiwiZmlsZSI6InNyYy9hcHAvY2FzZW1hbmFnZW1lbnQyL21hbmFnZW1lbnQyL21hbmFnZW1lbnQyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRhdGF0YWJsZS1jb250YWluZXIge1xuICBtaW4taGVpZ2h0OiAwLjAxJTtcbiAgb3ZlcmZsb3cteDogYXV0bztcbiAgb3ZlcmZsb3cteTogaGlkZGVuO1xuICAvLyBoZWlnaHQ6IDQwNXB4O1xufVxuXG50YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG50YWJsZS5jYXNldGFibGUge1xuICB3aWR0aDogMjAwMHB4O1xuICBtYXgtd2lkdGg6IGluaGVyaXQ7XG59XG50ZC5tYXQtY29sdW1uLXN0YXIge1xuICB3aWR0aDogMjBweDtcbiAgcGFkZGluZy1yaWdodDogOHB4O1xufVxuXG4vKiBQb3BvdmVyIHN0eWxpbmcgKi9cblxuYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuLnBvcG92ZXJfX3RpdGxlIHtcbiAgZm9udC1zaXplOiAxNHB4O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuODcpO1xuICBmb250LXdlaWdodDogMTAwO1xufVxuXG4ucG9wb3Zlcl9fd3JhcHBlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuLnBvcG92ZXJfX2NvbnRlbnQge1xuICBvcGFjaXR5OiAwO1xuICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogLTY5cHg7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIDEwcHgpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmRmZGZkO1xuICBwYWRkaW5nOiAwLjVyZW0gMXJlbSAwIDFyZW07XG4gIGJveC1zaGFkb3c6IDAgMnB4IDVweCAwIHJnYmEoMCwgMCwgMCwgMC4yNik7XG4gIG1pbi13aWR0aDogMjcwcHg7XG4gIHRvcDogNTVweDtcbiAgei1pbmRleDogOTk5OTtcbn1cbi5wb3BvdmVyX19jb250ZW50OmJlZm9yZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogNTAlO1xuICB0b3A6IC04cHg7XG4gIGNvbnRlbnQ6ICcnO1xuICB3aWR0aDogMTVweDtcbiAgaGVpZ2h0OiAxNXB4O1xuICB6LWluZGV4OiA5OTk5O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIG1hcmdpbi1sZWZ0OiAtN3B4O1xuICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICAtbW96LXRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIHJnYigyNDMsIDI0MCwgMjQwKTtcbiAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCByZ2IoMjQzLCAyNDAsIDI0MCk7XG4gIHRyYW5zaXRpb24tZHVyYXRpb246IDAuM3M7XG4gIHRyYW5zaXRpb24tcHJvcGVydHk6IHRyYW5zZm9ybTtcbn1cbi5wb3BvdmVyX193cmFwcGVyOmhvdmVyIC5wb3BvdmVyX19jb250ZW50IHtcbiAgei1pbmRleDogOTk5OTtcbiAgb3BhY2l0eTogMTtcbiAgdmlzaWJpbGl0eTogdmlzaWJsZTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCwgLTIwcHgpO1xuICB0cmFuc2l0aW9uOiBhbGwgMC41cyBjdWJpYy1iZXppZXIoMC43NSwgLTAuMDIsIDAuMiwgMC45Nyk7XG59XG4ucG9wb3Zlcl9fbWVzc2FnZSB7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGRkO1xuICBmb250LXdlaWdodDogNTAwO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuLmljb25maXgge1xuICB0b3A6IDRweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBsZWZ0OiA1cHg7XG4gIGNvbG9yOiAjMDA0NzlkO1xufVxuLnBvcG92ZXJfX2NvbnRlbnQgcCB7XG4gIG1hcmdpbi1ib3R0b206IDBweDtcbn1cbi5pbmNlcnJvciB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBjb2xvcjogI2Y0NDMzNiAhaW1wb3J0YW50O1xuICBmb250LXdlaWdodDogNDAwO1xufVxuXG4ubWF0LXRhYmxlID4gdGJvZHkgPiB0ciA+IHRkIHtcbiAgei1pbmRleDogMSAhaW1wb3J0YW50O1xuICBcbn0iLCIuZGF0YXRhYmxlLWNvbnRhaW5lciB7XG4gIG1pbi1oZWlnaHQ6IDAuMDElO1xuICBvdmVyZmxvdy14OiBhdXRvO1xuICBvdmVyZmxvdy15OiBoaWRkZW47XG59XG5cbnRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn1cblxudGFibGUuY2FzZXRhYmxlIHtcbiAgd2lkdGg6IDIwMDBweDtcbiAgbWF4LXdpZHRoOiBpbmhlcml0O1xufVxuXG50ZC5tYXQtY29sdW1uLXN0YXIge1xuICB3aWR0aDogMjBweDtcbiAgcGFkZGluZy1yaWdodDogOHB4O1xufVxuXG4vKiBQb3BvdmVyIHN0eWxpbmcgKi9cbmEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi5wb3BvdmVyX190aXRsZSB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjg3KTtcbiAgZm9udC13ZWlnaHQ6IDEwMDtcbn1cblxuLnBvcG92ZXJfX3dyYXBwZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLnBvcG92ZXJfX2NvbnRlbnQge1xuICBvcGFjaXR5OiAwO1xuICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogLTY5cHg7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIDEwcHgpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmRmZGZkO1xuICBwYWRkaW5nOiAwLjVyZW0gMXJlbSAwIDFyZW07XG4gIGJveC1zaGFkb3c6IDAgMnB4IDVweCAwIHJnYmEoMCwgMCwgMCwgMC4yNik7XG4gIG1pbi13aWR0aDogMjcwcHg7XG4gIHRvcDogNTVweDtcbiAgei1pbmRleDogOTk5OTtcbn1cblxuLnBvcG92ZXJfX2NvbnRlbnQ6YmVmb3JlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiA1MCU7XG4gIHRvcDogLThweDtcbiAgY29udGVudDogXCJcIjtcbiAgd2lkdGg6IDE1cHg7XG4gIGhlaWdodDogMTVweDtcbiAgei1pbmRleDogOTk5OTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICBtYXJnaW4tbGVmdDogLTdweDtcbiAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbiAgLW1vei10cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZjNmMGYwO1xuICBib3JkZXItbGVmdDogMXB4IHNvbGlkICNmM2YwZjA7XG4gIHRyYW5zaXRpb24tZHVyYXRpb246IDAuM3M7XG4gIHRyYW5zaXRpb24tcHJvcGVydHk6IHRyYW5zZm9ybTtcbn1cblxuLnBvcG92ZXJfX3dyYXBwZXI6aG92ZXIgLnBvcG92ZXJfX2NvbnRlbnQge1xuICB6LWluZGV4OiA5OTk5O1xuICBvcGFjaXR5OiAxO1xuICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAtMjBweCk7XG4gIHRyYW5zaXRpb246IGFsbCAwLjVzIGN1YmljLWJlemllcigwLjc1LCAtMC4wMiwgMC4yLCAwLjk3KTtcbn1cblxuLnBvcG92ZXJfX21lc3NhZ2Uge1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2RkZDtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbn1cblxuLmljb25maXgge1xuICB0b3A6IDRweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBsZWZ0OiA1cHg7XG4gIGNvbG9yOiAjMDA0NzlkO1xufVxuXG4ucG9wb3Zlcl9fY29udGVudCBwIHtcbiAgbWFyZ2luLWJvdHRvbTogMHB4O1xufVxuXG4uaW5jZXJyb3Ige1xuICBmb250LXNpemU6IDc1JTtcbiAgY29sb3I6ICNmNDQzMzYgIWltcG9ydGFudDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbn1cblxuLm1hdC10YWJsZSA+IHRib2R5ID4gdHIgPiB0ZCB7XG4gIHotaW5kZXg6IDEgIWltcG9ydGFudDtcbn0iXX0= */\");\n\n/***/ }),\n\n/***/ \"./src/app/casemanagement2/management2/management2.component.ts\":\n/*!**********************************************************************!*\\\n  !*** ./src/app/casemanagement2/management2/management2.component.ts ***!\n  \\**********************************************************************/\n/*! exports provided: MY_FORMATS, Management2Component */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MY_FORMATS\", function() { return MY_FORMATS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Management2Component\", function() { return Management2Component; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ \"./node_modules/@angular/core/fesm2015/core.js\");\n/* harmony import */ var _angular_flex_layout__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/flex-layout */ \"./node_modules/@angular/flex-layout/esm2015/flex-layout.js\");\n/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material/paginator */ \"./node_modules/@angular/material/esm2015/paginator.js\");\n/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/table */ \"./node_modules/@angular/material/esm2015/table.js\");\n/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material/sort */ \"./node_modules/@angular/material/esm2015/sort.js\");\n/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/forms */ \"./node_modules/@angular/forms/fesm2015/forms.js\");\n/* harmony import */ var _angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material-moment-adapter */ \"./node_modules/@angular/material-moment-adapter/fesm2015/material-moment-adapter.js\");\n/* harmony import */ var _angular_material_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material/core */ \"./node_modules/@angular/material/esm2015/core.js\");\n/* harmony import */ var _ngneat_transloco__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @ngneat/transloco */ \"./node_modules/@ngneat/transloco/fesm2015/ngneat-transloco.js\");\n\n\n\n\n\n\n\n\n\n\n// const moment = _rollupMoment || _moment;\nconst MY_FORMATS = {\n    parse: {\n        dateInput: 'L',\n    },\n    display: {\n        dateInput: 'YYYY-MM-DD',\n        monthYearLabel: 'YYYY',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'YYYY',\n    },\n};\nlet Management2Component = class Management2Component {\n    constructor(cdRef, mediaObserver, transloco) {\n        this.cdRef = cdRef;\n        this.mediaObserver = mediaObserver;\n        this.transloco = transloco;\n        // MatPaginator Inputs\n        this.length = 25;\n        this.pageSize = 5;\n        this.pageSizeOptions = [5, 10, 25];\n        //   // MatPaginator Output\n        //  pageEvent: PageEvent;\n        // new_renew =\"new\";\n        // classification =\"Contract Management\";\n        // contracttype =\"dummy1\";\n        // autoupdate=\"yes\";\n        this.inc_app_sec_member_error = false;\n        this.displayedColumns = [\n            'Controlnumber',\n            'BranchNumber',\n            'ApplicationDate',\n            'Status',\n            'ContractName',\n            'OtherParty',\n            'Applicantdivision',\n            'Applicationdepartment',\n            'Applicant',\n            'LegalRepresentative',\n            'Contractperiod',\n            'Contractperiodend',\n            'Automaticupdate',\n            'Relatedcountries',\n            'ProjectName',\n            'ContractType',\n            'Externalconsultation',\n            'Contracteditem',\n            'Newongoing',\n            'Alertreleasedate',\n            'Relatedcontractnumber',\n            'Expecteddateofconsultion',\n            'FIXContract',\n            'Approvaldecisionnumber',\n            'Managementstatus',\n            'Legaldepartmentreceptiondate',\n            'Legaldepartmentresponsedeadline'\n        ];\n        this.hideitem = true;\n        this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_4__[\"MatTableDataSource\"](ELEMENT_DATA);\n        this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_4__[\"MatTableDataSource\"](ELEMENT_DATA.slice());\n        console.log('dataSource', this.dataSource);\n    }\n    setPageSizeOptions(setPageSizeOptionsInput) {\n        if (setPageSizeOptionsInput) {\n            this.pageSizeOptions = setPageSizeOptionsInput.split(',').map(str => +str);\n        }\n    }\n    hideformele() {\n        this.hideitem = false;\n    }\n    showformele() {\n        this.hideitem = true;\n    }\n    sortData(sort) {\n        // const data = ELEMENT_DATA.slice();\n        console.log('dataSource1', new _angular_material_table__WEBPACK_IMPORTED_MODULE_4__[\"MatTableDataSource\"](ELEMENT_DATA.slice()));\n        if (!sort.active || sort.direction === '') {\n            // this.sortedData = data;\n            this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_4__[\"MatTableDataSource\"](ELEMENT_DATA.slice());\n            return;\n        }\n        this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_4__[\"MatTableDataSource\"](ELEMENT_DATA.sort((a, b) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'Controlnumber': return compare(a.Controlnumber, b.Controlnumber, isAsc);\n                case 'BranchNumber': return compare(a.BranchNumber, b.BranchNumber, isAsc);\n                case 'ApplicationDate': return compare(a.ApplicationDate, b.ApplicationDate, isAsc);\n                case 'Status': return compare(a.Status, b.Status, isAsc);\n                case 'ContractName': return compare(a.ContractName, b.ContractName, isAsc);\n                case 'OtherParty': return compare(a.OtherParty, b.OtherParty, isAsc);\n                case 'Applicantdivision': return compare(a.Applicantdivision, b.Applicantdivision, isAsc);\n                case 'Applicationdepartment': return compare(a.Applicationdepartment, b.Applicationdepartment, isAsc);\n                case 'Applicant': return compare(a.Applicant, b.Applicant, isAsc);\n                case 'LegalRepresentative': return compare(a.LegalRepresentative, b.LegalRepresentative, isAsc);\n                case 'Contractperiod': return compare(a.Contractperiod, b.Contractperiod, isAsc);\n                case 'Contractperiodend': return compare(a.Contractperiodend, b.Contractperiodend, isAsc);\n                case 'Automaticupdate': return compare(a.Automaticupdate, b.Automaticupdate, isAsc);\n                case 'Relatedcountries': return compare(a.Relatedcountries, b.Relatedcountries, isAsc);\n                case 'ProjectName': return compare(a.ProjectName, b.ProjectName, isAsc);\n                case 'ContractType': return compare(a.ContractType, b.ContractType, isAsc);\n                case 'Externalconsultation': return compare(a.Externalconsultation, b.Externalconsultation, isAsc);\n                case 'Contracteditem': return compare(a.Contracteditem, b.Contracteditem, isAsc);\n                case 'Newongoing': return compare(a.Newongoing, b.Newongoing, isAsc);\n                case 'Alertreleasedate': return compare(a.Alertreleasedate, b.Alertreleasedate, isAsc);\n                case 'Relatedcontractnumber': return compare(a.Relatedcontractnumber, b.Relatedcontractnumber, isAsc);\n                case 'Expecteddateofconsultion': return compare(a.Expecteddateofconsultion, b.Expecteddateofconsultion, isAsc);\n                case 'FIXContract': return compare(a.FIXContract, b.FIXContract, isAsc);\n                case 'Approvaldecisionnumber': return compare(a.Approvaldecisionnumber, b.Approvaldecisionnumber, isAsc);\n                case 'Managementstatus': return compare(a.Managementstatus, b.Managementstatus, isAsc);\n                case 'Legaldepartmentreceptiondate': return compare(a.Legaldepartmentreceptiondate, b.Legaldepartmentreceptiondate, isAsc);\n                case 'Legaldepartmentresponsedeadline': return compare(a.Legaldepartmentresponsedeadline, b.Legaldepartmentresponsedeadline, isAsc);\n                default: return 0;\n            }\n        }));\n        this.dataSource.paginator = this.paginator;\n        // this.pageSizeOptions = setPageSizeOptionsInput.split(',').map(str => +str);\n        //this.paginator.pageIndex = 0\n    }\n    setActiveLang(lang) {\n        this.transloco.setActiveLang(lang);\n    }\n    ngOnInit() {\n        // this.length = ELEMENT_DATA.length;\n        this.dataSource.paginator = this.paginator;\n        this.caseform = new _angular_forms__WEBPACK_IMPORTED_MODULE_6__[\"FormGroup\"]({\n            classification: new _angular_forms__WEBPACK_IMPORTED_MODULE_6__[\"FormControl\"]('', _angular_forms__WEBPACK_IMPORTED_MODULE_6__[\"Validators\"].required),\n            controlnumber: new _angular_forms__WEBPACK_IMPORTED_MODULE_6__[\"FormControl\"](''),\n            recpdate: new _angular_forms__WEBPACK_IMPORTED_MODULE_6__[\"FormControl\"](''),\n            appdate: new _angular_forms__WEBPACK_IMPORTED_MODULE_6__[\"FormControl\"]('', [_angular_forms__WEBPACK_IMPORTED_MODULE_6__[\"Validators\"].required, this.dateValidator]),\n            appdept: new _angular_forms__WEBPACK_IMPORTED_MODULE_6__[\"FormControl\"](''),\n            applicant: new _angular_forms__WEBPACK_IMPORTED_MODULE_6__[\"FormControl\"]('', _angular_forms__WEBPACK_IMPORTED_MODULE_6__[\"Validators\"].required),\n            contractname: new _angular_forms__WEBPACK_IMPORTED_MODULE_6__[\"FormControl\"](''),\n            contracteditem: new _angular_forms__WEBPACK_IMPORTED_MODULE_6__[\"FormControl\"](''),\n            inc_app_sec_memberyes: new _angular_forms__WEBPACK_IMPORTED_MODULE_6__[\"FormControl\"](''),\n            inc_app_sec_memberno: new _angular_forms__WEBPACK_IMPORTED_MODULE_6__[\"FormControl\"](''),\n            new_renew: new _angular_forms__WEBPACK_IMPORTED_MODULE_6__[\"FormControl\"](''),\n            autoupdate: new _angular_forms__WEBPACK_IMPORTED_MODULE_6__[\"FormControl\"](''),\n            contracttype: new _angular_forms__WEBPACK_IMPORTED_MODULE_6__[\"FormControl\"]('', _angular_forms__WEBPACK_IMPORTED_MODULE_6__[\"Validators\"].required),\n            contractor: new _angular_forms__WEBPACK_IMPORTED_MODULE_6__[\"FormControl\"](''),\n            begcontperiod: new _angular_forms__WEBPACK_IMPORTED_MODULE_6__[\"FormControl\"](''),\n            endcontperiod: new _angular_forms__WEBPACK_IMPORTED_MODULE_6__[\"FormControl\"](''),\n            legelrep: new _angular_forms__WEBPACK_IMPORTED_MODULE_6__[\"FormControl\"](''),\n            fix_ver_contract_att: new _angular_forms__WEBPACK_IMPORTED_MODULE_6__[\"FormControl\"](''),\n            exsist_extr_consult: new _angular_forms__WEBPACK_IMPORTED_MODULE_6__[\"FormControl\"](''),\n            legel_dept_notes: new _angular_forms__WEBPACK_IMPORTED_MODULE_6__[\"FormControl\"](''),\n            status_creating: new _angular_forms__WEBPACK_IMPORTED_MODULE_6__[\"FormControl\"](''),\n            status_receiving: new _angular_forms__WEBPACK_IMPORTED_MODULE_6__[\"FormControl\"](''),\n            status_app_responding: new _angular_forms__WEBPACK_IMPORTED_MODULE_6__[\"FormControl\"](''),\n            status_contract_signed: new _angular_forms__WEBPACK_IMPORTED_MODULE_6__[\"FormControl\"](''),\n            status_cancelled: new _angular_forms__WEBPACK_IMPORTED_MODULE_6__[\"FormControl\"](''),\n            status_requesting: new _angular_forms__WEBPACK_IMPORTED_MODULE_6__[\"FormControl\"](''),\n            status_correspond_legl_dept: new _angular_forms__WEBPACK_IMPORTED_MODULE_6__[\"FormControl\"](''),\n            status_resp_legl_dept: new _angular_forms__WEBPACK_IMPORTED_MODULE_6__[\"FormControl\"](''),\n            status_completed: new _angular_forms__WEBPACK_IMPORTED_MODULE_6__[\"FormControl\"](''),\n            country_us: new _angular_forms__WEBPACK_IMPORTED_MODULE_6__[\"FormControl\"](''),\n            country_china: new _angular_forms__WEBPACK_IMPORTED_MODULE_6__[\"FormControl\"](''),\n            country_korea: new _angular_forms__WEBPACK_IMPORTED_MODULE_6__[\"FormControl\"](''),\n            country_europe: new _angular_forms__WEBPACK_IMPORTED_MODULE_6__[\"FormControl\"](''),\n            country_tiwan: new _angular_forms__WEBPACK_IMPORTED_MODULE_6__[\"FormControl\"](''),\n            country_india: new _angular_forms__WEBPACK_IMPORTED_MODULE_6__[\"FormControl\"](''),\n            country_others: new _angular_forms__WEBPACK_IMPORTED_MODULE_6__[\"FormControl\"](''),\n        });\n        this.mediaSub = this.mediaObserver.asObservable().subscribe((change) => {\n            change.forEach((v) => {\n                console.log(v.mediaQuery, v.mqAlias);\n            });\n            console.log('-----');\n        });\n    }\n    show_inc_app_sec(event) {\n        console.log(event.checked);\n        if (!!this.caseform.value.inc_app_sec_memberno === true ||\n            !!this.caseform.value.inc_app_sec_memberyes === true) {\n            this.inc_app_sec_member_error = false;\n        }\n        else {\n            this.inc_app_sec_member_error = true;\n        }\n    }\n    onSubmit() {\n        if (!!this.caseform.value.inc_app_sec_memberno === true ||\n            !!this.caseform.value.inc_app_sec_memberyes === true) {\n            this.inc_app_sec_member_error = false;\n        }\n        else {\n            this.inc_app_sec_member_error = true;\n        }\n        console.log(this.caseform);\n        // console.log(\"aa\",!!this.caseform.value.inc_app_sec_memberno);\n        // console.log(\"bb\",!!this.caseform.value.inc_app_sec_memberyes);\n    }\n    dateValidator(c) {\n        let value = c.value;\n        if (value && typeof value === 'string') {\n            let match = value.match(/^[0-9]{4}[\\/][0-9]{2}[\\/][0-9]{2}$/);\n            if (!match) {\n                return { dateInvalid: true };\n            }\n            else if (match && match[0] !== value) {\n                return { dateInvalid: true };\n            }\n        }\n        return null;\n    }\n    ngAfterViewInit() {\n        this.cdRef.detectChanges();\n    }\n    ngOnDestroy() {\n        if (this.mediaSub) {\n            this.mediaSub.unsubscribe();\n        }\n    }\n};\nManagement2Component.ctorParameters = () => [\n    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__[\"ChangeDetectorRef\"] },\n    { type: _angular_flex_layout__WEBPACK_IMPORTED_MODULE_2__[\"MediaObserver\"] },\n    { type: _ngneat_transloco__WEBPACK_IMPORTED_MODULE_9__[\"TranslocoService\"] }\n];\ntslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"ViewChild\"])(_angular_material_paginator__WEBPACK_IMPORTED_MODULE_3__[\"MatPaginator\"], { static: true })\n], Management2Component.prototype, \"paginator\", void 0);\ntslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"ViewChild\"])(_angular_material_sort__WEBPACK_IMPORTED_MODULE_5__[\"MatSort\"], { static: true })\n], Management2Component.prototype, \"sort\", void 0);\nManagement2Component = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Component\"])({\n        selector: 'app-management',\n        template: tslib__WEBPACK_IMPORTED_MODULE_0__[\"__importDefault\"](__webpack_require__(/*! raw-loader!./management2.component.html */ \"./node_modules/raw-loader/dist/cjs.js!./src/app/casemanagement2/management2/management2.component.html\")).default,\n        providers: [\n            // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\n            // application's root module. We provide it at the component level here, due to limitations of\n            // our example generation script.\n            {\n                provide: _angular_material_core__WEBPACK_IMPORTED_MODULE_8__[\"DateAdapter\"],\n                useClass: _angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_7__[\"MomentDateAdapter\"],\n                deps: [_angular_material_core__WEBPACK_IMPORTED_MODULE_8__[\"MAT_DATE_LOCALE\"], _angular_material_moment_adapter__WEBPACK_IMPORTED_MODULE_7__[\"MAT_MOMENT_DATE_ADAPTER_OPTIONS\"]],\n            },\n            { provide: _angular_material_core__WEBPACK_IMPORTED_MODULE_8__[\"MAT_DATE_FORMATS\"], useValue: MY_FORMATS },\n        ],\n        styles: [tslib__WEBPACK_IMPORTED_MODULE_0__[\"__importDefault\"](__webpack_require__(/*! ./management2.component.scss */ \"./src/app/casemanagement2/management2/management2.component.scss\")).default]\n    })\n], Management2Component);\n\nconst ELEMENT_DATA = [\n    {\n        Controlnumber: 1,\n        BranchNumber: 2,\n        ApplicationDate: '2020/05/19',\n        Status: 'Yes',\n        ContractName: 'Dummy Text',\n        OtherParty: 'Dummy Text',\n        Applicantdivision: 'Division',\n        Applicationdepartment: 'Department',\n        Applicant: 'Dummy Text',\n        LegalRepresentative: 'Dummy Text',\n        Contractperiod: '2020/05/25',\n        Contractperiodend: '2020/05/25',\n        Automaticupdate: 'Yes',\n        Relatedcountries: 'Japan, Poland',\n        ProjectName: 'non disclosure contract',\n        ContractType: 'Dummy Text',\n        Externalconsultation: 'Dummy Text',\n        Contracteditem: 'aaa',\n        Newongoing: 'on going',\n        Alertreleasedate: '2020/05/19',\n        Relatedcontractnumber: '1',\n        Expecteddateofconsultion: '2020/05/19',\n        FIXContract: 'Yes',\n        Approvaldecisionnumber: '2',\n        Managementstatus: 'Others',\n        Legaldepartmentreceptiondate: '2020/05/19',\n        Legaldepartmentresponsedeadline: '2020/05/19'\n    },\n    {\n        Controlnumber: 1,\n        BranchNumber: 3,\n        ApplicationDate: '2020/05/19',\n        Status: 'Yes',\n        ContractName: 'Dummy Text',\n        OtherParty: 'Dummy Text',\n        Applicantdivision: 'Division',\n        Applicationdepartment: 'Department',\n        Applicant: 'Dummy Text',\n        LegalRepresentative: 'Dummy Text',\n        Contractperiod: '2020/05/25',\n        Contractperiodend: '2020/05/25',\n        Automaticupdate: 'Yes',\n        Relatedcountries: 'Japan, Poland',\n        ProjectName: 'non disclosure contract',\n        ContractType: 'Dummy Text',\n        Externalconsultation: 'Dummy Text',\n        Contracteditem: 'aaa',\n        Newongoing: 'on going',\n        Alertreleasedate: '2020/05/19',\n        Relatedcontractnumber: '1',\n        Expecteddateofconsultion: '2020/05/19',\n        FIXContract: 'Yes',\n        Approvaldecisionnumber: '2',\n        Managementstatus: 'Others',\n        Legaldepartmentreceptiondate: '2020/05/19',\n        Legaldepartmentresponsedeadline: '2020/05/19'\n    },\n    {\n        Controlnumber: 1,\n        BranchNumber: 2,\n        ApplicationDate: '2020/05/19',\n        Status: 'Yes',\n        ContractName: 'Dummy Text',\n        OtherParty: 'Dummy Text',\n        Applicantdivision: 'Division',\n        Applicationdepartment: 'Department',\n        Applicant: 'Dummy Text',\n        LegalRepresentative: 'Dummy Text',\n        Contractperiod: '2020/05/25',\n        Contractperiodend: '2020/05/25',\n        Automaticupdate: 'Yes',\n        Relatedcountries: 'Japan, Poland',\n        ProjectName: 'non disclosure contract',\n        ContractType: 'Dummy Text',\n        Externalconsultation: 'Dummy Text',\n        Contracteditem: 'aaa',\n        Newongoing: 'on going',\n        Alertreleasedate: '2020/05/19',\n        Relatedcontractnumber: '1',\n        Expecteddateofconsultion: '2020/05/19',\n        FIXContract: 'Yes',\n        Approvaldecisionnumber: '2',\n        Managementstatus: 'Others',\n        Legaldepartmentreceptiondate: '2020/05/19',\n        Legaldepartmentresponsedeadline: '2020/05/19'\n    },\n    {\n        Controlnumber: 1,\n        BranchNumber: 4,\n        ApplicationDate: '2020/05/19',\n        Status: 'Yes',\n        ContractName: 'Dummy Text',\n        OtherParty: 'Dummy Text',\n        Applicantdivision: 'Division',\n        Applicationdepartment: 'Department',\n        Applicant: 'Dummy Text',\n        LegalRepresentative: 'Dummy Text',\n        Contractperiod: '2020/05/25',\n        Contractperiodend: '2020/05/25',\n        Automaticupdate: 'Yes',\n        Relatedcountries: 'Japan, Poland',\n        ProjectName: 'non disclosure contract',\n        ContractType: 'Dummy Text',\n        Externalconsultation: 'Dummy Text',\n        Contracteditem: 'aaa',\n        Newongoing: 'on going',\n        Alertreleasedate: '2020/05/19',\n        Relatedcontractnumber: '1',\n        Expecteddateofconsultion: '2020/05/19',\n        FIXContract: 'Yes',\n        Approvaldecisionnumber: '2',\n        Managementstatus: 'Others',\n        Legaldepartmentreceptiondate: '2020/05/19',\n        Legaldepartmentresponsedeadline: '2020/05/19'\n    },\n    {\n        Controlnumber: 1,\n        BranchNumber: 2,\n        ApplicationDate: '2020/05/19',\n        Status: 'Yes',\n        ContractName: 'Dummy Text',\n        OtherParty: 'Dummy Text',\n        Applicantdivision: 'Division',\n        Applicationdepartment: 'Department',\n        Applicant: 'Dummy Text',\n        LegalRepresentative: 'Dummy Text',\n        Contractperiod: '2020/05/25',\n        Contractperiodend: '2020/05/25',\n        Automaticupdate: 'Yes',\n        Relatedcountries: 'Japan, Poland',\n        ProjectName: 'non disclosure contract',\n        ContractType: 'Dummy Text',\n        Externalconsultation: 'Dummy Text',\n        Contracteditem: 'aaa',\n        Newongoing: 'on going',\n        Alertreleasedate: '2020/05/19',\n        Relatedcontractnumber: '1',\n        Expecteddateofconsultion: '2020/05/19',\n        FIXContract: 'Yes',\n        Approvaldecisionnumber: '2',\n        Managementstatus: 'Others',\n        Legaldepartmentreceptiondate: '2020/05/19',\n        Legaldepartmentresponsedeadline: '2020/05/19'\n    },\n    {\n        Controlnumber: 1,\n        BranchNumber: 2,\n        ApplicationDate: '2020/05/19',\n        Status: 'Yes',\n        ContractName: 'Dummy Text',\n        OtherParty: 'Dummy Text',\n        Applicantdivision: 'Division',\n        Applicationdepartment: 'Department',\n        Applicant: 'Dummy Text',\n        LegalRepresentative: 'Dummy Text',\n        Contractperiod: '2020/05/25',\n        Contractperiodend: '2020/05/25',\n        Automaticupdate: 'Yes',\n        Relatedcountries: 'Japan, Poland',\n        ProjectName: 'non disclosure contract',\n        ContractType: 'Dummy Text',\n        Externalconsultation: 'Dummy Text',\n        Contracteditem: 'aaa',\n        Newongoing: 'on going',\n        Alertreleasedate: '2020/05/19',\n        Relatedcontractnumber: '1',\n        Expecteddateofconsultion: '2020/05/19',\n        FIXContract: 'Yes',\n        Approvaldecisionnumber: '2',\n        Managementstatus: 'Others',\n        Legaldepartmentreceptiondate: '2020/05/19',\n        Legaldepartmentresponsedeadline: '2020/05/19'\n    },\n    {\n        Controlnumber: 1,\n        BranchNumber: 2,\n        ApplicationDate: '2020/05/19',\n        Status: 'Yes',\n        ContractName: 'Dummy Text',\n        OtherParty: 'Dummy Text',\n        Applicantdivision: 'Division',\n        Applicationdepartment: 'Department',\n        Applicant: 'Dummy Text',\n        LegalRepresentative: 'Dummy Text',\n        Contractperiod: '2020/05/25',\n        Contractperiodend: '2020/05/25',\n        Automaticupdate: 'Yes',\n        Relatedcountries: 'Japan, Poland',\n        ProjectName: 'non disclosure contract',\n        ContractType: 'Dummy Text',\n        Externalconsultation: 'Dummy Text',\n        Contracteditem: 'aaa',\n        Newongoing: 'on going',\n        Alertreleasedate: '2020/05/19',\n        Relatedcontractnumber: '1',\n        Expecteddateofconsultion: '2020/05/19',\n        FIXContract: 'Yes',\n        Approvaldecisionnumber: '2',\n        Managementstatus: 'Others',\n        Legaldepartmentreceptiondate: '2020/05/19',\n        Legaldepartmentresponsedeadline: '2020/05/19'\n    },\n    {\n        Controlnumber: 1,\n        BranchNumber: 2,\n        ApplicationDate: '2020/05/19',\n        Status: 'Yes',\n        ContractName: 'Dummy Text',\n        OtherParty: 'Dummy Text',\n        Applicantdivision: 'Division',\n        Applicationdepartment: 'Department',\n        Applicant: 'Dummy Text',\n        LegalRepresentative: 'Dummy Text',\n        Contractperiod: '2020/05/25',\n        Contractperiodend: '2020/05/25',\n        Automaticupdate: 'Yes',\n        Relatedcountries: 'Japan, Poland',\n        ProjectName: 'non disclosure contract',\n        ContractType: 'Dummy Text',\n        Externalconsultation: 'Dummy Text',\n        Contracteditem: 'aaa',\n        Newongoing: 'on going',\n        Alertreleasedate: '2020/05/19',\n        Relatedcontractnumber: '1',\n        Expecteddateofconsultion: '2020/05/19',\n        FIXContract: 'Yes',\n        Approvaldecisionnumber: '2',\n        Managementstatus: 'Others',\n        Legaldepartmentreceptiondate: '2020/05/19',\n        Legaldepartmentresponsedeadline: '2020/05/19'\n    },\n];\nfunction compare(a, b, isAsc) {\n    console.log('sorted data', (a < b ? -1 : 1) * (isAsc ? 1 : -1));\n    return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n\n\n/***/ })\n\n}]);\n//# sourceMappingURL=casemanagement2-casemanagement2-module-es2015.js.map","export default \"<div class=\\\"container\\\">\\n  <!-- <div class=\\\"image-header\\\">\\n    <img src=\\\"http://www.icloud8.net/cmlc/images/logo.png\\\" alt=\\\"\\\" />\\n  </div> -->\\n  <form [formGroup]=\\\"caseform\\\" autocomplete=\\\"off\\\" (ngSubmit)=\\\"onSubmit()\\\" style=\\\"margin-top: 50px\\\">\\n    <mat-card class=\\\"main casemag\\\">\\n      <ng-container *transloco=\\\"let t\\\" >\\n        <mat-card-header>\\n          <mat-card-title style=\\\"min-height: 40px; margin: 0;\\\"\\n            ><mat-icon>dashboard</mat-icon> Case Management List\\n          </mat-card-title>\\n          <mat-button-toggle-group\\n            name=\\\"fontStyle\\\"\\n            aria-label=\\\"Font Style\\\"\\n            style=\\\"margin-right: 5px;\\\"\\n            fxHide.lt-md\\n            class=\\\"langgroup\\\"\\n          >\\n            <mat-button-toggle value=\\\"en\\\" (click)=\\\"setActiveLang('en')\\\"\\n              >EN</mat-button-toggle\\n            >\\n            <mat-button-toggle value=\\\"jp\\\" (click)=\\\"setActiveLang('jp')\\\"\\n              >JP</mat-button-toggle\\n            > </mat-button-toggle-group\\n          ><button mat-raised-button color=\\\"accent\\\" type=\\\"button\\\" style=\\\"margin-right: 5px;\\\">\\n            <mat-icon>cloud_download</mat-icon> \\n            <span fxHide.lt-md>{{ t('CSV_CREATE') }}</span>\\n          </button> <button mat-raised-button color=\\\"accent\\\" type=\\\"submit\\\"  (click)=\\\"hideformele()\\\">\\n            <mat-icon>search</mat-icon>\\n            <span fxHide.lt-md>{{ t('SEARCH') }}</span>\\n          </button>\\n        </mat-card-header>\\n       \\n      </ng-container>\\n      <div\\n        fxLayout=\\\"row wrap\\\"\\n        fxLayout.xs=\\\"column\\\"\\n        fxLayoutAlign.gt-sm=\\\"space-around center\\\"\\n        style=\\\"text-align: center; margin-bottom: 20px;\\\"\\n        fxHide.gt-sm\\n      >\\n        <div fxFlex=\\\"0 0 100%\\\">\\n          <mat-button-toggle-group\\n            name=\\\"fontStyle\\\"\\n            aria-label=\\\"Font Style\\\"\\n            style=\\\"margin-right: 5px;\\\"\\n          >\\n            <mat-button-toggle value=\\\"en\\\" (click)=\\\"setActiveLang('en')\\\"\\n              >EN</mat-button-toggle\\n            >\\n            <mat-button-toggle value=\\\"jp\\\" (click)=\\\"setActiveLang('jp')\\\"\\n              >JP</mat-button-toggle\\n            >\\n          </mat-button-toggle-group>\\n        </div>\\n      </div>\\n\\n      <ng-container *transloco=\\\"let t\\\" >\\n        <div\\n          fxLayout=\\\"row wrap\\\"\\n          fxLayout.xs=\\\"column\\\"\\n          fxLayoutAlign.gt-sm=\\\"space-around center\\\"\\n          *ngIf=\\\"hideitem\\\"\\n        >\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <label>{{ t('CLASSIF') }}*</label>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <mat-form-field>\\n              <mat-select formControlName=\\\"classification\\\">\\n                <mat-option value=\\\"{{ t('C_MGMT') }}\\\">{{\\n                  t('C_MGMT')\\n                }}</mat-option>\\n                <mat-option value=\\\"{{ t('Legal_C_M') }}\\\">{{\\n                  t('Legal_C_M')\\n                }}</mat-option>\\n                <mat-option value=\\\"{{ t('LEGAL_BOTH') }}\\\">{{\\n                  t('LEGAL_BOTH')\\n                }}</mat-option>\\n              </mat-select>\\n              <mat-error\\n                *ngIf=\\\"\\n                  caseform.get('classification').errors &&\\n                  caseform.get('classification').errors.required\\n                \\\"\\n                >Please fill up the field</mat-error\\n              >\\n            </mat-form-field>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <label>{{ t('CONTITEM') }}</label>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"\\\" formControlName=\\\"controlnumber\\\" />\\n            </mat-form-field>\\n          </div>\\n        </div>\\n      </ng-container>\\n      <ng-container *transloco=\\\"let t\\\">\\n        <div\\n          fxLayout=\\\"row wrap\\\"\\n          fxLayout.xs=\\\"column\\\"\\n          fxLayoutAlign.gt-sm=\\\"space-around center\\\"\\n          *ngIf=\\\"hideitem\\\"\\n        >\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <label>{{ t('LDPD') }}</label>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <mat-form-field>\\n              <input\\n                matInput\\n                [matDatepicker]=\\\"recpdate\\\"\\n                formControlName=\\\"recpdate\\\"\\n              />\\n              <mat-datepicker-toggle\\n                matSuffix\\n                [for]=\\\"recpdate\\\"\\n              ></mat-datepicker-toggle>\\n              <mat-datepicker #recpdate></mat-datepicker>\\n            </mat-form-field>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <label>{{ t('APPL_DATE') }}*</label>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <mat-form-field>\\n              <input\\n                matInput\\n                [matDatepicker]=\\\"appdate\\\"\\n                formControlName=\\\"appdate\\\"\\n              />\\n              <mat-datepicker-toggle\\n                matSuffix\\n                [for]=\\\"appdate\\\"\\n              ></mat-datepicker-toggle>\\n              <mat-datepicker #appdate></mat-datepicker>\\n              <mat-error\\n                *ngIf=\\\"\\n                  caseform.get('appdate').errors &&\\n                  !caseform.get('appdate').errors.matDatepickerParse &&\\n                  caseform.get('appdate').errors.required\\n                \\\"\\n                >Please fill up the field</mat-error\\n              >\\n              <mat-error\\n                *ngIf=\\\"\\n                  caseform.get('appdate').errors &&\\n                  caseform.get('appdate').errors.matDatepickerParse\\n                \\\"\\n                >Please enter a valid date</mat-error\\n              >\\n            </mat-form-field>\\n          </div>\\n        </div>\\n      </ng-container>\\n      <ng-container *transloco=\\\"let t\\\" >\\n        <div\\n          fxLayout=\\\"row wrap\\\"\\n          fxLayout.xs=\\\"column\\\"\\n          fxLayoutAlign.gt-sm=\\\"space-around center\\\"\\n          *ngIf=\\\"hideitem\\\"\\n        >\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <label>{{ t('APPLY_F_DEPT') }}</label>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"\\\" formControlName=\\\"appdept\\\" />\\n            </mat-form-field>\\n            <div class=\\\"button-row\\\">\\n              <button\\n                type=\\\"button\\\"\\n                mat-raised-button\\n                color=\\\"primary\\\"\\n                class=\\\"gradient-primary\\\"\\n              >\\n                <mat-icon>link</mat-icon> {{ t('REFERENCE') }}\\n              </button>\\n              <button\\n                type=\\\"button\\\"\\n                mat-raised-button\\n                color=\\\"warn\\\"\\n                class=\\\"gradient-warn\\\"\\n              >\\n                <mat-icon>clear</mat-icon> {{ t('CLEAR') }}\\n              </button>\\n            </div>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <label>{{ t('APPLICANT') }}*</label>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"\\\" formControlName=\\\"applicant\\\" />\\n              <mat-error\\n                *ngIf=\\\"\\n                  caseform.get('applicant').errors &&\\n                  caseform.get('applicant').errors.required\\n                \\\"\\n                >Please fill up the field</mat-error\\n              >\\n            </mat-form-field>\\n            <div class=\\\"button-row\\\">\\n              <button\\n                type=\\\"button\\\"\\n                mat-raised-button\\n                color=\\\"primary\\\"\\n                class=\\\"gradient-primary\\\"\\n              >\\n                <mat-icon>link</mat-icon> {{ t('REFERENCE') }}\\n              </button>\\n              <button\\n                type=\\\"button\\\"\\n                mat-raised-button\\n                color=\\\"warn\\\"\\n                class=\\\"gradient-warn\\\"\\n              >\\n                <mat-icon>clear</mat-icon> {{ t('CLEAR') }}\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n      </ng-container>\\n      <ng-container *transloco=\\\"let t\\\">\\n        <div\\n          fxLayout=\\\"row wrap\\\"\\n          fxLayout.xs=\\\"column\\\"\\n          fxLayoutAlign.gt-sm=\\\"space-around center\\\"\\n          *ngIf=\\\"hideitem\\\"\\n        >\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <label>{{ t('CONTRACT_NAME') }}</label>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"\\\" formControlName=\\\"applicant\\\" />\\n            </mat-form-field>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <label>{{ t('CONTRACT_ITEM') }}</label>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"\\\" formControlName=\\\"contracteditem\\\" />\\n            </mat-form-field>\\n          </div>\\n        </div>\\n      </ng-container>\\n      <ng-container *transloco=\\\"let t\\\" >\\n        <div\\n          fxLayout=\\\"row wrap\\\"\\n          fxLayout.xs=\\\"column\\\"\\n          fxLayoutAlign.gt-sm=\\\"space-around center\\\"\\n          *ngIf=\\\"hideitem\\\"\\n        >\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <label>{{ t('SECTION_MEMBER') }}*</label>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <mat-checkbox\\n              (change)=\\\"show_inc_app_sec($event)\\\"\\n              class=\\\"chk-margin\\\"\\n              formControlName=\\\"inc_app_sec_memberyes\\\"\\n              >{{ t('TRUE') }}</mat-checkbox\\n            >\\n            <mat-checkbox\\n              (change)=\\\"show_inc_app_sec($event)\\\"\\n              class=\\\"chk-margin\\\"\\n              formControlName=\\\"inc_app_sec_memberno\\\"\\n              >{{ t('FALSE') }}</mat-checkbox\\n            >\\n            <mat-error class=\\\"incerror\\\" *ngIf=\\\"inc_app_sec_member_error\\\"\\n              >Select atleast one</mat-error\\n            >\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <label>{{ t('NEW_RENEWAL') }}</label>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <mat-form-field>\\n              <mat-select formControlName=\\\"new_renew\\\" name=\\\"new_renew\\\">\\n                <mat-option value=\\\"new\\\">{{ t('NEW') }}</mat-option>\\n                <mat-option value=\\\"renewal\\\">{{ t('RENEWAL') }}</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n      </ng-container>\\n      <ng-container *transloco=\\\"let t\\\">\\n        <div\\n          fxLayout=\\\"row wrap\\\"\\n          fxLayout.xs=\\\"column\\\"\\n          fxLayoutAlign.gt-sm=\\\"space-around center\\\"\\n          *ngIf=\\\"hideitem\\\"\\n        >\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <label>{{ t('AUTOMATIC_UPDATE') }}</label>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <mat-form-field>\\n              <mat-select formControlName=\\\"autoupdate\\\" name=\\\"autoupdate\\\">\\n                <mat-option value=\\\"yes\\\">{{ t('YES') }}</mat-option>\\n                <mat-option value=\\\"no\\\">{{ t('NO') }}</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <label>{{ t('CONTRACT_TYPE') }}*</label>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <mat-form-field>\\n              <mat-select formControlName=\\\"contracttype\\\">\\n                <mat-option value=\\\"dummy1\\\">Dummy text</mat-option>\\n                <mat-option value=\\\"dummy2\\\">Renewal</mat-option>\\n              </mat-select>\\n              <mat-error\\n                *ngIf=\\\"\\n                  caseform.get('contracttype').errors &&\\n                  caseform.get('contracttype').errors.required\\n                \\\"\\n                >Please fill up the field</mat-error\\n              >\\n            </mat-form-field>\\n          </div>\\n        </div>\\n      </ng-container>\\n      <ng-container *transloco=\\\"let t\\\">\\n        <div\\n          fxLayout=\\\"row wrap\\\"\\n          fxLayout.xs=\\\"column\\\"\\n          fxLayoutAlign.gt-sm=\\\"space-around center\\\"\\n          *ngIf=\\\"hideitem\\\"\\n        >\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <label>{{ t('CONTRACTOR') }}</label>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"\\\" formControlName=\\\"contractor\\\" />\\n            </mat-form-field>\\n            <div class=\\\"button-row\\\">\\n              <button\\n                type=\\\"button\\\"\\n                mat-raised-button\\n                color=\\\"primary\\\"\\n                class=\\\"gradient-primary\\\"\\n              >\\n                <mat-icon>link</mat-icon> {{ t('REFERENCE') }}\\n              </button>\\n              <button\\n                type=\\\"button\\\"\\n                mat-raised-button\\n                color=\\\"warn\\\"\\n                class=\\\"gradient-warn\\\"\\n              >\\n                <mat-icon>clear</mat-icon> {{ t('CLEAR') }}\\n              </button>\\n            </div>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <label>{{ t('BEGINNING_DATE_OF_THE_CONTRACT') }}</label>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <mat-form-field>\\n              <input\\n                matInput\\n                [matDatepicker]=\\\"begcontperiod\\\"\\n                formControlName=\\\"begcontperiod\\\"\\n              />\\n              <mat-datepicker-toggle\\n                matSuffix\\n                [for]=\\\"begcontperiod\\\"\\n              ></mat-datepicker-toggle>\\n              <mat-datepicker #begcontperiod></mat-datepicker>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n      </ng-container>\\n      <ng-container *transloco=\\\"let t\\\">\\n        <div\\n          fxLayout=\\\"row wrap\\\"\\n          fxLayout.xs=\\\"column\\\"\\n          fxLayoutAlign.gt-sm=\\\"space-around center\\\"\\n          *ngIf=\\\"hideitem\\\"\\n        >\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <label>{{ t('END_DATE_OF_THE_CONTRACT') }}</label>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <mat-form-field>\\n              <input\\n                matInput\\n                [matDatepicker]=\\\"endcontperiod\\\"\\n                formControlName=\\\"endcontperiod\\\"\\n              />\\n              <mat-datepicker-toggle\\n                matSuffix\\n                [for]=\\\"endcontperiod\\\"\\n              ></mat-datepicker-toggle>\\n              <mat-datepicker #endcontperiod></mat-datepicker>\\n            </mat-form-field>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <label>{{ t('LEGAL_REPRESENTATIVE') }}</label>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <mat-form-field>\\n              <mat-select formControlName=\\\"legelrep\\\" name=\\\"legelrep\\\">\\n                <mat-option value=\\\"yes\\\">{{ t('YES') }}</mat-option>\\n                <mat-option value=\\\"no\\\">{{ t('NO') }}</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n      </ng-container>\\n      <ng-container *transloco=\\\"let t\\\">\\n        <div\\n          fxLayout=\\\"row wrap\\\"\\n          fxLayout.xs=\\\"column\\\"\\n          fxLayoutAlign.gt-sm=\\\"space-around center\\\"\\n          *ngIf=\\\"hideitem\\\"\\n        >\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <label>{{ t('FIX_VERSION_CONTRACT_ATTACHED') }}</label>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <mat-form-field>\\n              <mat-select\\n                formControlName=\\\"fix_ver_contract_att\\\"\\n                name=\\\"fix_ver_contract_att\\\"\\n              >\\n                <mat-option value=\\\"yes\\\">{{ t('YES') }}</mat-option>\\n                <mat-option value=\\\"no\\\">{{ t('NO') }}</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <label>{{ t('EXSISTANCE_OF_THE_EXTERNAL_CONSULTANT') }}</label>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <mat-form-field>\\n              <mat-select\\n                formControlName=\\\"exsist_extr_consult\\\"\\n                name=\\\"exsist_extr_consult\\\"\\n              >\\n                <mat-option value=\\\"yes\\\">{{ t('YES') }}</mat-option>\\n                <mat-option value=\\\"no\\\">{{ t('NO') }}</mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n      </ng-container>\\n      <ng-container *transloco=\\\"let t\\\">\\n        <div\\n          fxLayout=\\\"row wrap\\\"\\n          fxLayout.xs=\\\"column\\\"\\n          fxLayoutAlign.gt-sm=\\\"space-around center\\\"\\n          *ngIf=\\\"hideitem\\\"\\n        >\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <label>{{ t('LEGAL_DEPARTMENT_NOTES') }}</label>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <mat-form-field>\\n              <input\\n                matInput\\n                placeholder=\\\"\\\"\\n                formControlName=\\\"legel_dept_notes\\\"\\n              />\\n            </mat-form-field>\\n          </div>\\n\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <label>{{ t('PNAME') }}</label>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <mat-form-field>\\n              <input matInput placeholder=\\\"\\\" />\\n            </mat-form-field>\\n          </div>\\n        </div>\\n      </ng-container>\\n      <ng-container *transloco=\\\"let t\\\">\\n        <div\\n          fxLayout=\\\"row wrap\\\"\\n          fxLayout.xs=\\\"column\\\"\\n          fxLayoutAlign.gt-sm=\\\"space-around center\\\"\\n          *ngIf=\\\"hideitem\\\"\\n        >\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <label>{{ t('EXP_DATE_CONC') }}</label>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <mat-form-field>\\n              <input\\n                matInput\\n                [matDatepicker]=\\\"recpdate1\\\"\\n                formControlName=\\\"recpdate\\\"\\n              />\\n              <mat-datepicker-toggle\\n                matSuffix\\n                [for]=\\\"recpdate1\\\"\\n              ></mat-datepicker-toggle>\\n              <mat-datepicker #recpdate1></mat-datepicker>\\n            </mat-form-field>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <label>{{ t('ALERT_RELEASE_DATE') }}</label>\\n          </div>\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <mat-form-field>\\n              <input\\n                matInput\\n                [matDatepicker]=\\\"recpdate2\\\"\\n                formControlName=\\\"recpdate\\\"\\n              />\\n              <mat-datepicker-toggle\\n                matSuffix\\n                [for]=\\\"recpdate2\\\"\\n              ></mat-datepicker-toggle>\\n              <mat-datepicker #recpdate2></mat-datepicker>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n    </ng-container>\\n    <ng-container *transloco=\\\"let t\\\">\\n      <div\\n        fxLayout=\\\"row wrap\\\"\\n        fxLayout.xs=\\\"column\\\"\\n        fxLayoutAlign.gt-sm=\\\"space-around center\\\"\\n        *ngIf=\\\"hideitem\\\"\\n      >\\n        <div fxFlex=\\\"0 0 25%\\\">\\n          <label>{{ t('APPROVAL_DECISION_NUMBER') }}</label>\\n        </div>\\n        <div fxFlex=\\\"0 0 25%\\\">\\n          <mat-form-field>\\n            <input\\n              matInput\\n              placeholder=\\\"\\\"\\n              formControlName=\\\"legel_dept_notes\\\"\\n            />\\n          </mat-form-field>\\n        </div>\\n\\n        <div fxFlex=\\\"0 0 25%\\\">\\n          <label>{{ t('BRANCH_NUMBER') }}</label>\\n        </div>\\n        <div fxFlex=\\\"0 0 25%\\\">\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"\\\" />\\n          </mat-form-field>\\n        </div>\\n      </div>\\n    </ng-container>\\n      <ng-container *transloco=\\\"let t\\\">\\n        <div\\n          fxLayout=\\\"row wrap\\\"\\n          fxLayout.xs=\\\"column\\\"\\n          fxLayoutAlign.gt-sm=\\\"space-around start\\\"\\n          *ngIf=\\\"hideitem\\\"\\n          class=\\\"statusmargin\\\"\\n        >\\n          <div fxFlex=\\\"0 0 25%\\\">\\n            <label>{{ t('STATUS') }}</label>\\n          </div>\\n          <div fxFlex=\\\"0 0 75%\\\">\\n            <mat-checkbox formControlName=\\\"status_creating\\\">{{\\n              t('CREATING')\\n            }}</mat-checkbox\\n            >\\n            <mat-checkbox formControlName=\\\"status_receiving\\\">{{\\n              t('RECEIVING')\\n            }}</mat-checkbox\\n            >\\n            <mat-checkbox formControlName=\\\"status_app_responding\\\">{{\\n              t('APP_RESPOND')\\n            }}</mat-checkbox\\n            >\\n            <mat-checkbox formControlName=\\\"status_contract_signed\\\">{{\\n              t('CONTRACT_SIGN')\\n            }}</mat-checkbox\\n            >\\n            <mat-checkbox formControlName=\\\"status_cancelled\\\">{{\\n              t('CANCELLED')\\n            }}</mat-checkbox\\n            >\\n            <mat-checkbox formControlName=\\\"status_requesting\\\">{{\\n              t('REQUESTING')\\n            }}</mat-checkbox\\n            >\\n            <mat-checkbox formControlName=\\\"status_correspond_legl_dept\\\">{{\\n              t('CTLDEPT')\\n            }}</mat-checkbox\\n            >\\n            <mat-checkbox formControlName=\\\"status_resp_legl_dept\\\">{{\\n              t('RTLDEPT')\\n            }}</mat-checkbox\\n            >\\n            <mat-checkbox formControlName=\\\"status_completed\\\">{{\\n              t('COMPLETED')\\n            }}</mat-checkbox>\\n          </div>\\n\\n          <!-- <div fxFlex=\\\"0 0 50%\\\">\\n            <mat-checkbox formControlName=\\\"status_requesting\\\">{{\\n              t('REQUESTING')\\n            }}</mat-checkbox\\n            ><br />\\n            <mat-checkbox formControlName=\\\"status_correspond_legl_dept\\\">{{\\n              t('CTLDEPT')\\n            }}</mat-checkbox\\n            ><br />\\n            <mat-checkbox formControlName=\\\"status_resp_legl_dept\\\">{{\\n              t('RTLDEPT')\\n            }}</mat-checkbox\\n            ><br />\\n            <mat-checkbox formControlName=\\\"status_completed\\\">{{\\n              t('COMPLETED')\\n            }}</mat-checkbox\\n            ><br />\\n          </div> -->\\n        </div>\\n      </ng-container>\\n      <ng-container *transloco=\\\"let t\\\">\\n        <div\\n        fxLayout=\\\"row wrap\\\"\\n        fxLayout.xs=\\\"column\\\"\\n        fxLayoutAlign.gt-sm=\\\"space-around start\\\"\\n        style=\\\"margin-top: 20px;\\\"\\n        *ngIf=\\\"hideitem\\\"\\n      >\\n        <div fxFlex=\\\"0 0 25%\\\">\\n          <label>{{ t('RELATED_COUNTRIES') }} </label>\\n        </div>\\n        <div fxFlex=\\\"0 0 75%\\\">\\n          <mat-checkbox class=\\\"country-margin\\\" formControlName=\\\"country_korea\\\">{{\\n            t('JAPAN')\\n          }}</mat-checkbox>\\n          <mat-checkbox\\n            class=\\\"country-margin\\\"\\n            formControlName=\\\"country_china\\\"\\n            >{{ t('US') }}</mat-checkbox\\n          >\\n          <mat-checkbox\\n            class=\\\"country-margin\\\"\\n            formControlName=\\\"country_korea\\\"\\n            >{{ t('CHINA') }}</mat-checkbox\\n          >\\n          <mat-checkbox\\n            class=\\\"country-margin\\\"\\n            formControlName=\\\"country_europe\\\"\\n            >{{ t('TAIWAN') }}</mat-checkbox\\n          >\\n          <mat-checkbox\\n            class=\\\"country-margin\\\"\\n            formControlName=\\\"country_tiwan\\\"\\n            >{{ t('INDIA') }}</mat-checkbox\\n          >\\n          <mat-checkbox\\n            class=\\\"country-margin\\\"\\n            formControlName=\\\"country_india\\\"\\n            >{{ t('EUROPE') }}</mat-checkbox\\n          >\\n          <mat-checkbox\\n            class=\\\"country-margin\\\"\\n            formControlName=\\\"country_others\\\"\\n            >{{ t('OTHERS') }}</mat-checkbox\\n          >\\n        </div>\\n\\n       \\n      </div>\\n      </ng-container>\\n      <ng-container *transloco=\\\"let t\\\">\\n        <div\\n          fxLayout=\\\"row wrap\\\"\\n          fxLayout.xs=\\\"column\\\"\\n          fxLayoutAlign=\\\"space-around center\\\"\\n          style=\\\"margin-top: 10px;\\\"\\n          *ngIf=\\\"hideitem\\\"\\n        >\\n          <div fxFlex=\\\"0 0 100%\\\">\\n            <button mat-raised-button color=\\\"accent\\\" (click)=\\\"hideformele()\\\">\\n              <mat-icon>search</mat-icon> {{ t('SEARCH') }}\\n            </button>\\n          </div>\\n        </div>\\n      </ng-container>\\n      <ng-container *transloco=\\\"let t\\\">\\n        <div\\n          fxLayout=\\\"row wrap\\\"\\n          fxLayout.xs=\\\"column\\\"\\n          fxLayoutAlign=\\\"space-around center\\\"\\n          style=\\\"margin-top: 10px;\\\"\\n          *ngIf=\\\"!hideitem\\\"\\n        >\\n          <div fxFlex=\\\"0 0 100%\\\">\\n            <button mat-raised-button color=\\\"accent\\\" (click)=\\\"showformele()\\\">\\n              <mat-icon>close</mat-icon> {{ t('CLOSE') }}\\n            </button>\\n          </div>\\n        </div>\\n      </ng-container>\\n      <mat-card class=\\\"dataset\\\">\\n        <div class=\\\"card-icon\\\">\\n          Case Management List\\n        </div>\\n        <ng-container *transloco=\\\"let t\\\">\\n          <div\\n            fxLayout=\\\"row wrap\\\"\\n            fxLayout.xs=\\\"column\\\"\\n            fxLayoutAlign=\\\"space-around center\\\"\\n            style=\\\"margin-top: 10px;\\\"\\n          >\\n            <div fxFlex=\\\"0 0 100%\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"margintop\\\">\\n              <div class=\\\"onmobile\\\">\\n                <span\\n                  >{{ t('THE_TOALNOFC') }}:\\n                  <mat-chip color=\\\"primary\\\" selected>11</mat-chip></span\\n                >\\n                <!-- <button\\n                  type=\\\"button\\\"\\n                  mat-raised-button\\n                  color=\\\"primary\\\"\\n                  class=\\\"gradient-success mr-1\\\"\\n                >\\n                  <mat-icon>cloud_download</mat-icon> {{ t('CSV_CREATE') }}\\n                </button>\\n                <button\\n                  type=\\\"button\\\"\\n                  mat-raised-button\\n                  color=\\\"primary\\\"\\n                  class=\\\"gradient-indigo\\\"\\n                >\\n                  <mat-icon>print</mat-icon> {{ t('PRINT') }}\\n                </button> -->\\n              </div>\\n            </div>\\n          </div>\\n        </ng-container>\\n        <div\\n          fxLayout=\\\"row wrap\\\"\\n          fxLayout.xs=\\\"column\\\"\\n          fxLayoutAlign=\\\"space-around center\\\"\\n          style=\\\"margin-top: 10px;\\\"\\n          fxHide.lt-md\\n          class=\\\"only-desktop\\\"\\n          *transloco=\\\"let t\\\"\\n        >\\n          <div fxFlex=\\\"0 0 100%\\\">\\n            <div class=\\\"datatable-container mat-elevation-z1\\\">\\n              <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"casetable\\\"  matSort (matSortChange)=\\\"sortData($event)\\\">\\n                <!-- Controlnumber Column -->\\n\\n                <ng-container\\n                  matColumnDef=\\\"Controlnumber\\\"\\n                  sticky\\n                  *transloco=\\\"let t\\\"\\n                >\\n                  <th mat-header-cell *matHeaderCellDef style=\\\"width: 40px;\\\" mat-sort-header=\\\"Controlnumber\\\">\\n                    {{ t('CONTROL_NUMBER') }}\\n                  </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width: 40px;\\\">\\n                    {{ element.Controlnumber }}\\n                  </td>\\n                </ng-container>\\n\\n                <!-- BranchNumber Column -->\\n                <ng-container matColumnDef=\\\"BranchNumber\\\" sticky>\\n                  <th mat-header-cell *matHeaderCellDef style=\\\"width: 40px;\\\" mat-sort-header=\\\"BranchNumber\\\">\\n                    {{ t('BRANCH_NUMBER') }}\\n                  </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width: 40px;\\\">\\n                    {{ element.BranchNumber }}\\n                  </td>\\n                </ng-container>\\n\\n                <!-- ApplicationDate Column -->\\n                <!-- <ng-container matColumnDef=\\\"ApplicationDate\\\" sticky>\\n                  <th mat-header-cell *matHeaderCellDef style=\\\"width: 40px;\\\">\\n                    {{ t('APPL_DATE') }}\\n                  </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width: 40px;\\\">\\n                    <mat-chip-list aria-label=\\\"ApplicationDate\\\">\\n                      <mat-chip color=\\\"accent\\\" selected class=\\\"chipred\\\"\\n                        >{{ element.ApplicationDate }}\\n                      </mat-chip>\\n                    </mat-chip-list>\\n                  </td>\\n                </ng-container> -->\\n\\n                <!-- Applicant Column -->\\n                <!-- <ng-container matColumnDef=\\\"Applicant\\\" sticky>\\n                  <th mat-header-cell *matHeaderCellDef style=\\\"width: 40px;\\\">\\n                    {{ t('APPLICANT') }}\\n                  </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width: 40px;\\\">\\n                    {{ element.Applicant }}\\n                  </td>\\n                </ng-container> -->\\n\\n                <!-- ApplicationDate Column -->\\n                <ng-container matColumnDef=\\\"ApplicationDate\\\" sticky>\\n                  <th mat-header-cell *matHeaderCellDef style=\\\"width: 40px;\\\" mat-sort-header=\\\"ApplicationDate\\\">\\n                    {{ t('APPL_DATE') }}\\n                  </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width: 40px;\\\">\\n                    {{ element.ApplicationDate }}\\n                  </td>\\n                </ng-container>\\n\\n                     <!-- Status Column -->\\n                     <ng-container matColumnDef=\\\"Status\\\" sticky>\\n                      <th mat-header-cell *matHeaderCellDef style=\\\"width: 40px;\\\" mat-sort-header=\\\"ContractName\\\">{{ t('STATUS') }}</th>\\n                      <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width: 40px;\\\">\\n                        {{ element.Status }}\\n                      </td>\\n                    </ng-container>\\n\\n                <!-- ContractName Column -->\\n                <ng-container matColumnDef=\\\"ContractName\\\" sticky>\\n                  <th mat-header-cell *matHeaderCellDef style=\\\"width: 40px;\\\" mat-sort-header=\\\"Status\\\">\\n                    {{ t('CONTRACT_NAME') }}\\n                  </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width: 40px;\\\">\\n                    <span *ngIf=\\\"element.BranchNumber != 3 && element.BranchNumber != 4\\\">{{element.ContractName}}</span>\\n                    <div\\n                      class=\\\"popover__wrapper\\\"\\n                      *ngIf=\\\"\\n                        element.BranchNumber == 3 || element.BranchNumber == 4\\n                      \\\"\\n                    >\\n                      <a href=\\\"#\\\">\\n                        <h2 class=\\\"popover__title\\\">\\n                          {{ element.ContractName }}...<mat-icon class=\\\"iconfix\\\"\\n                            >screen_share</mat-icon\\n                          >\\n                        </h2>\\n                      </a>\\n                      <div class=\\\"popover__content\\\">\\n                        <p class=\\\"popover__message\\\">Dummy Text</p>\\n                        <p>\\n                          Lorem Ipsum is simply dummy text of the printing and\\n                          typesetting industry. Lorem Ipsum has been the\\n                          industry's standard dummy text ever since the 1500s.\\n                        </p>\\n                      </div>\\n                    </div>\\n                  </td>\\n                </ng-container>\\n\\n                <!-- otherparty Column -->\\n                <ng-container matColumnDef=\\\"OtherParty\\\" sticky>\\n                  <th mat-header-cell *matHeaderCellDef style=\\\"width: 40px;\\\" mat-sort-header=\\\"OtherParty\\\">\\n                    {{ t('OTHER_PARTY') }}\\n                  </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width: 40px;\\\">\\n                    {{ element.OtherParty }}\\n                  </td>\\n                </ng-container>\\n\\n                <!-- Applicantdivision Column -->\\n                <ng-container matColumnDef=\\\"Applicantdivision\\\" >\\n                  <th mat-header-cell *matHeaderCellDef style=\\\"width: 40px;\\\" mat-sort-header=\\\"Applicantdivision\\\">\\n                    {{ t('APP_DIVI') }}\\n                  </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width: 40px;\\\">\\n                    {{ element.Applicantdivision }}\\n                  </td>\\n                </ng-container> \\n\\n                <!-- Applicationdepartment Column -->\\n                <ng-container matColumnDef=\\\"Applicationdepartment\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"Applicationdepartment\\\">\\n                    {{ t('APPLY_F_DEPT') }}\\n                  </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\">\\n                    {{ element.Applicationdepartment }}\\n                  </td>\\n                </ng-container>\\n                <!-- Applicant Column -->\\n                <ng-container matColumnDef=\\\"Applicant\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"Applicant\\\">\\n                    {{ t('APPLICANT') }}\\n                  </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\">\\n                    {{ element.Applicant }}\\n                  </td>\\n                </ng-container>\\n\\n                <!-- LegalRepresentative Column -->\\n                <ng-container matColumnDef=\\\"LegalRepresentative\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"LegalRepresentative\\\">\\n                    {{ t('LEGAL_REPRESENTATIVE') }}\\n                  </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\">\\n                    {{ element.LegalRepresentative }}\\n                  </td>\\n                </ng-container>\\n\\n           \\n\\n                <!-- Contractperiod Column -->\\n                <ng-container matColumnDef=\\\"Contractperiod\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"Contractperiod\\\">\\n                    {{ t('CONT_PERIOD') }}\\n                  </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\" >\\n                    {{ element.Contractperiod }}\\n                  </td>\\n                </ng-container>\\n\\n                <!-- Contractperiodend Column -->\\n                <ng-container matColumnDef=\\\"Contractperiodend\\\">\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"Contractperiodend\\\">\\n                    {{ t('CONT_PERIOD_END') }}\\n                  </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\">\\n                    {{ element.Contractperiodend }}\\n                  </td>\\n                </ng-container>\\n                  <!-- Automaticupdate Column -->\\n                  <ng-container matColumnDef=\\\"Automaticupdate\\\">\\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"Automaticupdate\\\">\\n                      {{ t('AUTOMATIC_UPDATE') }}\\n                    </th>\\n                    <td mat-cell *matCellDef=\\\"let element\\\">\\n                      {{ element.Automaticupdate }}\\n                    </td>\\n                  </ng-container>\\n                  \\n              \\n              <!-- Relatedcountries Column -->\\n               <ng-container matColumnDef=\\\"Relatedcountries\\\">\\n                <th mat-header-cell *matHeaderCellDef  mat-sort-header=\\\"Relatedcountries\\\">\\n                  {{ t('RELATED_COUNTRIES') }}\\n                </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">\\n                  {{ element.Relatedcountries }}\\n                </td>\\n              </ng-container>\\n\\n               <!-- ProjectName Column -->\\n               <ng-container matColumnDef=\\\"ProjectName\\\">\\n                <th mat-header-cell *matHeaderCellDef  mat-sort-header=\\\"ProjectName\\\">\\n                  {{ t('PNAME') }}\\n                </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">\\n                  {{ element.ProjectName }}\\n                </td>\\n              </ng-container>\\n\\n               <!-- ContractType Column -->\\n               <ng-container matColumnDef=\\\"ContractType\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"ContractType\\\">\\n                  {{ t('CONTRACT_TYPE') }}\\n                </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">\\n                  {{ element.ContractType }}\\n                </td>\\n              </ng-container>\\n              \\n              <!-- Externalconsultation Column -->\\n              <ng-container matColumnDef=\\\"Externalconsultation\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"Externalconsultation\\\">\\n                  {{ t('EXTCONSULTANT') }}\\n                </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">\\n                  {{ element.Externalconsultation }}\\n                </td>\\n              </ng-container>\\n\\n               <!-- Contracteditem Column -->\\n               <ng-container matColumnDef=\\\"Contracteditem\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"Contracteditem\\\">\\n                  {{ t('CONTITEM') }}\\n                </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">\\n                  {{ element.Contracteditem }}\\n                </td>\\n              </ng-container>\\n             \\n              <!-- Newongoing Column -->\\n              <ng-container matColumnDef=\\\"Newongoing\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"Newongoing\\\">\\n                  {{ t('NEWONGOING') }}\\n                </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">\\n                  {{ element.Newongoing }}\\n                </td>\\n              </ng-container>\\n            \\n            <!-- Alertreleasedate Column -->\\n             <ng-container matColumnDef=\\\"Alertreleasedate\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"Alertreleasedate\\\">\\n                {{ t('ALERT_RELEASE_DATE') }}\\n              </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">\\n                {{ element.Alertreleasedate }}\\n              </td>\\n            </ng-container>\\n\\n            <!-- Relatedcontractnumber Column -->\\n            <ng-container matColumnDef=\\\"Relatedcontractnumber\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"Relatedcontractnumber\\\">\\n                {{ t('RELATE_CONTRACT_NUMBER') }}\\n              </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">\\n                {{ element.Relatedcontractnumber }}\\n              </td>\\n            </ng-container>\\n           \\n            <!-- Expecteddateofconsultion Column -->\\n            <ng-container matColumnDef=\\\"Expecteddateofconsultion\\\">\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"Expecteddateofconsultion\\\">\\n                {{ t('CONC_OF_S_D') }}\\n              </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">\\n                {{ element.Expecteddateofconsultion }}\\n              </td>\\n            </ng-container>\\n\\n             <!-- FIXContract Column -->\\n             <ng-container matColumnDef=\\\"FIXContract\\\">\\n              <th mat-header-cell *matHeaderCellDef  mat-sort-header=\\\"FIXContract\\\">\\n                {{ t('FIXCONTRACT') }}\\n              </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">\\n                {{ element.FIXContract }}\\n              </td>\\n            </ng-container>\\n          \\n          <!-- Approvaldecisionnumber Column -->\\n          <ng-container matColumnDef=\\\"Approvaldecisionnumber\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"Approvaldecisionnumber\\\">\\n              {{ t('APPROVAL_DECISION_NUMBER') }}\\n            </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\n              {{ element.Approvaldecisionnumber }}\\n            </td>\\n          </ng-container>\\n\\n           <!-- Managementstatus Column -->\\n           <ng-container matColumnDef=\\\"Managementstatus\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"Managementstatus\\\">\\n              {{ t('MANAGEMENT_STATE') }}\\n            </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\n              {{ element.Managementstatus }}\\n            </td>\\n          </ng-container>\\n          \\n          <!-- Legaldepartmentreceptiondate Column -->\\n          <ng-container matColumnDef=\\\"Legaldepartmentreceptiondate\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"Legaldepartmentreceptiondate\\\">\\n              {{ t('LDPD') }}\\n            </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\n              {{ element.Legaldepartmentreceptiondate }}\\n            </td>\\n          </ng-container>\\n           <!-- Legaldepartmentresponsedeadline Column -->\\n           <ng-container matColumnDef=\\\"Legaldepartmentresponsedeadline\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"Legaldepartmentresponsedeadline\\\">\\n              {{ t('LDRD') }}\\n            </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\n              {{ element.Legaldepartmentresponsedeadline }}\\n            </td>\\n          </ng-container>\\n                <!-- Remarks Column -->\\n                <!-- <ng-container matColumnDef=\\\"Remarks\\\">\\n                  <th mat-header-cell *matHeaderCellDef>{{ t('REMARKS') }}</th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\">\\n                    {{ element.Remarks }}\\n                  </td>\\n                </ng-container> -->\\n\\n                <!-- SecurityCaseClassification Column -->\\n                <!-- <ng-container matColumnDef=\\\"SecurityCaseClassification\\\">\\n                  <th mat-header-cell *matHeaderCellDef>\\n                    {{ t('SEC_CASE_CLASSIF') }}\\n                  </th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\">\\n                    {{ element.SecurityCaseClassification }}\\n                  </td>\\n                </ng-container> -->\\n\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n                <tr\\n                  mat-row\\n                  *matRowDef=\\\"let row; let odd = odd; columns: displayedColumns\\\"\\n                  [ngClass]=\\\"{ gray: odd }\\\"\\n                >\\n                </tr>\\n              </table>\\n            </div>\\n            <!-- <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator> -->\\n          </div>\\n        </div>\\n        <div\\n        fxLayout=\\\"row wrap\\\"\\n        fxLayout.xs=\\\"column\\\"\\n        style=\\\"margin-top: 10px;\\\"\\n        fxHide.gt-sm\\n        class=\\\"only-mobile\\\"\\n        *transloco=\\\"let t\\\"\\n        >\\n        <div fxFlex=\\\"0 0 100%\\\">\\n          <div class=\\\"datatable-container mat-elevation-z1\\\">\\n            <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"casetable\\\">\\n              <!-- Controlnumber Column -->\\n        \\n              <ng-container\\n              matColumnDef=\\\"Controlnumber\\\"\\n              \\n              *transloco=\\\"let t\\\"\\n            >\\n              <th mat-header-cell *matHeaderCellDef style=\\\"width: 40px;\\\">\\n                {{ t('CONTROL_NUMBER') }}\\n              </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width: 40px;\\\">\\n                {{ element.Controlnumber }}\\n              </td>\\n            </ng-container>\\n        \\n            <!-- BranchNumber Column -->\\n            <ng-container matColumnDef=\\\"BranchNumber\\\" >\\n              <th mat-header-cell *matHeaderCellDef style=\\\"width: 40px;\\\">\\n                {{ t('BRANCH_NUMBER') }}\\n              </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width: 40px;\\\">\\n                {{ element.BranchNumber }}\\n              </td>\\n            </ng-container>\\n        \\n            <!-- ApplicationDate Column -->\\n            <!-- <ng-container matColumnDef=\\\"ApplicationDate\\\" sticky>\\n              <th mat-header-cell *matHeaderCellDef style=\\\"width: 40px;\\\">\\n                {{ t('APPL_DATE') }}\\n              </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width: 40px;\\\">\\n                <mat-chip-list aria-label=\\\"ApplicationDate\\\">\\n                  <mat-chip color=\\\"accent\\\" selected class=\\\"chipred\\\"\\n                    >{{ element.ApplicationDate }}\\n                  </mat-chip>\\n                </mat-chip-list>\\n              </td>\\n            </ng-container> -->\\n        \\n            <!-- Applicant Column -->\\n            <!-- <ng-container matColumnDef=\\\"Applicant\\\" sticky>\\n              <th mat-header-cell *matHeaderCellDef style=\\\"width: 40px;\\\">\\n                {{ t('APPLICANT') }}\\n              </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width: 40px;\\\">\\n                {{ element.Applicant }}\\n              </td>\\n            </ng-container> -->\\n        \\n            <!-- ApplicationDate Column -->\\n            <ng-container matColumnDef=\\\"ApplicationDate\\\">\\n              <th mat-header-cell *matHeaderCellDef style=\\\"width: 40px;\\\">\\n                {{ t('APPL_DATE') }}\\n              </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width: 40px;\\\">\\n                {{ element.ApplicationDate }}\\n              </td>\\n            </ng-container>\\n        \\n                 <!-- Status Column -->\\n                 <ng-container matColumnDef=\\\"Status\\\">\\n                  <th mat-header-cell *matHeaderCellDef style=\\\"width: 40px;\\\">{{ t('STATUS') }}</th>\\n                  <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width: 40px;\\\">\\n                    {{ element.Status }}\\n                  </td>\\n                </ng-container>\\n        \\n            <!-- ContractName Column -->\\n            <ng-container matColumnDef=\\\"ContractName\\\">\\n              <th mat-header-cell *matHeaderCellDef style=\\\"width: 40px;\\\">\\n                {{ t('CONTRACT_NAME') }}\\n              </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width: 40px;\\\">\\n                <span *ngIf=\\\"element.BranchNumber != 3 && element.BranchNumber != 4\\\">{{element.ContractName}}</span>\\n                <div\\n                  class=\\\"popover__wrapper\\\"\\n                  *ngIf=\\\"\\n                    element.BranchNumber == 3 || element.BranchNumber == 4\\n                  \\\"\\n                >\\n                  <a href=\\\"#\\\">\\n                    <h2 class=\\\"popover__title\\\">\\n                      {{ element.ContractName }}...<mat-icon class=\\\"iconfix\\\"\\n                        >screen_share</mat-icon\\n                      >\\n                    </h2>\\n                  </a>\\n                  <div class=\\\"popover__content\\\">\\n                    <p class=\\\"popover__message\\\">Dummy Text</p>\\n                    <p>\\n                      Lorem Ipsum is simply dummy text of the printing and\\n                      typesetting industry. Lorem Ipsum has been the\\n                      industry's standard dummy text ever since the 1500s.\\n                    </p>\\n                  </div>\\n                </div>\\n              </td>\\n            </ng-container>\\n        \\n            <!-- otherparty Column -->\\n            <ng-container matColumnDef=\\\"OtherParty\\\">\\n              <th mat-header-cell *matHeaderCellDef style=\\\"width: 40px;\\\">\\n                {{ t('OTHER_PARTY') }}\\n              </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width: 40px;\\\">\\n                {{ element.OtherParty }}\\n              </td>\\n            </ng-container>\\n        \\n            <!-- Applicantdivision Column -->\\n            <ng-container matColumnDef=\\\"Applicantdivision\\\" >\\n              <th mat-header-cell *matHeaderCellDef style=\\\"width: 40px;\\\">\\n                {{ t('APP_DIVI') }}\\n              </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width: 40px;\\\">\\n                {{ element.Applicantdivision }}\\n              </td>\\n            </ng-container> \\n        \\n            <!-- Applicationdepartment Column -->\\n            <ng-container matColumnDef=\\\"Applicationdepartment\\\">\\n              <th mat-header-cell *matHeaderCellDef>\\n                {{ t('APPLY_F_DEPT') }}\\n              </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">\\n                {{ element.Applicationdepartment }}\\n              </td>\\n            </ng-container>\\n            <!-- Applicant Column -->\\n            <ng-container matColumnDef=\\\"Applicant\\\">\\n              <th mat-header-cell *matHeaderCellDef>\\n                {{ t('APPLICANT') }}\\n              </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">\\n                {{ element.Applicant }}\\n              </td>\\n            </ng-container>\\n        \\n            <!-- LegalRepresentative Column -->\\n            <ng-container matColumnDef=\\\"LegalRepresentative\\\">\\n              <th mat-header-cell *matHeaderCellDef>\\n                {{ t('LEGAL_REPRESENTATIVE') }}\\n              </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">\\n                {{ element.LegalRepresentative }}\\n              </td>\\n            </ng-container>\\n        \\n        \\n        \\n            <!-- Contractperiod Column -->\\n            <ng-container matColumnDef=\\\"Contractperiod\\\">\\n              <th mat-header-cell *matHeaderCellDef>\\n                {{ t('CONT_PERIOD') }}\\n              </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">\\n                {{ element.Contractperiod }}\\n              </td>\\n            </ng-container>\\n        \\n            <!-- Contractperiodend Column -->\\n            <ng-container matColumnDef=\\\"Contractperiodend\\\">\\n              <th mat-header-cell *matHeaderCellDef>\\n                {{ t('CONT_PERIOD_END') }}\\n              </th>\\n              <td mat-cell *matCellDef=\\\"let element\\\">\\n                {{ element.Contractperiodend }}\\n              </td>\\n            </ng-container>\\n              <!-- Automaticupdate Column -->\\n              <ng-container matColumnDef=\\\"Automaticupdate\\\">\\n                <th mat-header-cell *matHeaderCellDef>\\n                  {{ t('AUTOMATIC_UPDATE') }}\\n                </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\">\\n                  {{ element.Automaticupdate }}\\n                </td>\\n              </ng-container>\\n              \\n          \\n          <!-- Relatedcountries Column -->\\n           <ng-container matColumnDef=\\\"Relatedcountries\\\">\\n            <th mat-header-cell *matHeaderCellDef>\\n              {{ t('RELATED_COUNTRIES') }}\\n            </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\n              {{ element.Relatedcountries }}\\n            </td>\\n          </ng-container>\\n        \\n           <!-- ProjectName Column -->\\n           <ng-container matColumnDef=\\\"ProjectName\\\">\\n            <th mat-header-cell *matHeaderCellDef>\\n              {{ t('PNAME') }}\\n            </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\n              {{ element.ProjectName }}\\n            </td>\\n          </ng-container>\\n        \\n           <!-- ContractType Column -->\\n           <ng-container matColumnDef=\\\"ContractType\\\">\\n            <th mat-header-cell *matHeaderCellDef>\\n              {{ t('CONTRACT_TYPE') }}\\n            </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\n              {{ element.ContractType }}\\n            </td>\\n          </ng-container>\\n          \\n          <!-- Externalconsultation Column -->\\n          <ng-container matColumnDef=\\\"Externalconsultation\\\">\\n            <th mat-header-cell *matHeaderCellDef>\\n              {{ t('EXTCONSULTANT') }}\\n            </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\n              {{ element.Externalconsultation }}\\n            </td>\\n          </ng-container>\\n        \\n           <!-- Contracteditem Column -->\\n           <ng-container matColumnDef=\\\"Contracteditem\\\">\\n            <th mat-header-cell *matHeaderCellDef>\\n              {{ t('CONTITEM') }}\\n            </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\n              {{ element.Contracteditem }}\\n            </td>\\n          </ng-container>\\n         \\n          <!-- Newongoing Column -->\\n          <ng-container matColumnDef=\\\"Newongoing\\\">\\n            <th mat-header-cell *matHeaderCellDef>\\n              {{ t('NEWONGOING') }}\\n            </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\n              {{ element.Newongoing }}\\n            </td>\\n          </ng-container>\\n        \\n        <!-- Alertreleasedate Column -->\\n         <ng-container matColumnDef=\\\"Alertreleasedate\\\">\\n          <th mat-header-cell *matHeaderCellDef>\\n            {{ t('ALERT_RELEASE_DATE') }}\\n          </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">\\n            {{ element.Alertreleasedate }}\\n          </td>\\n        </ng-container>\\n        \\n        <!-- Relatedcontractnumber Column -->\\n        <ng-container matColumnDef=\\\"Relatedcontractnumber\\\">\\n          <th mat-header-cell *matHeaderCellDef>\\n            {{ t('RELATE_CONTRACT_NUMBER') }}\\n          </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">\\n            {{ element.Relatedcontractnumber }}\\n          </td>\\n        </ng-container>\\n        \\n        <!-- Expecteddateofconsultion Column -->\\n        <ng-container matColumnDef=\\\"Expecteddateofconsultion\\\">\\n          <th mat-header-cell *matHeaderCellDef>\\n            {{ t('CONC_OF_S_D') }}\\n          </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">\\n            {{ element.Expecteddateofconsultion }}\\n          </td>\\n        </ng-container>\\n        \\n         <!-- FIXContract Column -->\\n         <ng-container matColumnDef=\\\"FIXContract\\\">\\n          <th mat-header-cell *matHeaderCellDef>\\n            {{ t('FIXCONTRACT') }}\\n          </th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">\\n            {{ element.FIXContract }}\\n          </td>\\n        </ng-container>\\n        \\n        <!-- Approvaldecisionnumber Column -->\\n        <ng-container matColumnDef=\\\"Approvaldecisionnumber\\\">\\n        <th mat-header-cell *matHeaderCellDef>\\n          {{ t('APPROVAL_DECISION_NUMBER') }}\\n        </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\n          {{ element.Approvaldecisionnumber }}\\n        </td>\\n        </ng-container>\\n        \\n        <!-- Managementstatus Column -->\\n        <ng-container matColumnDef=\\\"Managementstatus\\\">\\n        <th mat-header-cell *matHeaderCellDef>\\n          {{ t('MANAGEMENT_STATE') }}\\n        </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\n          {{ element.Managementstatus }}\\n        </td>\\n        </ng-container>\\n        \\n        <!-- Legaldepartmentreceptiondate Column -->\\n        <ng-container matColumnDef=\\\"Legaldepartmentreceptiondate\\\">\\n        <th mat-header-cell *matHeaderCellDef>\\n          {{ t('LDPD') }}\\n        </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\n          {{ element.Legaldepartmentreceptiondate }}\\n        </td>\\n        </ng-container>\\n        <!-- Legaldepartmentresponsedeadline Column -->\\n        <ng-container matColumnDef=\\\"Legaldepartmentresponsedeadline\\\">\\n        <th mat-header-cell *matHeaderCellDef>\\n          {{ t('LDRD') }}\\n        </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\n          {{ element.Legaldepartmentresponsedeadline }}\\n        </td>\\n        </ng-container>\\n        \\n        \\n          \\n        \\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n              <tr\\n                mat-row\\n                *matRowDef=\\\"let row; let odd = odd; columns: displayedColumns\\\"\\n                [ngClass]=\\\"{ gray: odd }\\\"\\n              ></tr>\\n            </table>\\n          </div>\\n        </div>\\n        </div>\\n        <div\\n        fxLayout=\\\"row wrap\\\"\\n        fxLayout.xs=\\\"column\\\"\\n        fxLayoutAlign=\\\"space-around center\\\"\\n        style=\\\"margin-top: 10px;\\\"\\n        >\\n        <div fxFlex=\\\"0 0 100%\\\">\\n          <mat-paginator [length]=\\\"length\\\"\\n            [pageSize]=\\\"pageSize\\\"\\n            [pageSizeOptions]=\\\"pageSizeOptions\\\"\\n            (page)=\\\"pageEvent = $event\\\">\\n          </mat-paginator>\\n        </div>\\n        </div>\\n      </mat-card>\\n    </mat-card>\\n  </form>\\n</div>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { Management2Component } from './management2/management2.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: Management2Component\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class Casemanagement2RoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { Casemanagement2RoutingModule } from './casemanagement2-routing.module';\nimport { Management2Component } from './management2/management2.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from '../core/material.module';\nimport { TranslocoRootModule } from '../transloco-root.module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n@NgModule({\n  declarations: [Management2Component],\n  imports: [\n    CommonModule,\n    Casemanagement2RoutingModule,\n    FormsModule, ReactiveFormsModule,\n    MaterialModule,\n    TranslocoRootModule,\n    FlexLayoutModule\n  ]\n})\nexport class Casemanagement2Module { }\n","export default \".datatable-container {\\n  min-height: 0.01%;\\n  overflow-x: auto;\\n  overflow-y: hidden;\\n}\\n\\ntable {\\n  width: 100%;\\n  max-width: 100%;\\n  margin-bottom: 20px;\\n}\\n\\ntable.casetable {\\n  width: 2000px;\\n  max-width: inherit;\\n}\\n\\ntd.mat-column-star {\\n  width: 20px;\\n  padding-right: 8px;\\n}\\n\\n/* Popover styling */\\n\\na {\\n  text-decoration: none;\\n}\\n\\n.popover__title {\\n  font-size: 14px;\\n  text-decoration: none;\\n  color: rgba(0, 0, 0, 0.87);\\n  font-weight: 100;\\n}\\n\\n.popover__wrapper {\\n  position: relative;\\n  display: inline-block;\\n}\\n\\n.popover__content {\\n  opacity: 0;\\n  visibility: hidden;\\n  position: absolute;\\n  left: -69px;\\n  transform: translate(0, 10px);\\n  background-color: #fdfdfd;\\n  padding: 0.5rem 1rem 0 1rem;\\n  box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.26);\\n  min-width: 270px;\\n  top: 55px;\\n  z-index: 9999;\\n}\\n\\n.popover__content:before {\\n  position: absolute;\\n  left: 50%;\\n  top: -8px;\\n  content: \\\"\\\";\\n  width: 15px;\\n  height: 15px;\\n  z-index: 9999;\\n  display: inline-block;\\n  background: #fff;\\n  margin-left: -7px;\\n  transform: rotate(45deg);\\n  -webkit-transform: rotate(45deg);\\n  -moz-transform: rotate(45deg);\\n  border-top: 1px solid #f3f0f0;\\n  border-left: 1px solid #f3f0f0;\\n  transition-duration: 0.3s;\\n  transition-property: transform;\\n}\\n\\n.popover__wrapper:hover .popover__content {\\n  z-index: 9999;\\n  opacity: 1;\\n  visibility: visible;\\n  transform: translate(0, -20px);\\n  transition: all 0.5s cubic-bezier(0.75, -0.02, 0.2, 0.97);\\n}\\n\\n.popover__message {\\n  border-bottom: 1px solid #ddd;\\n  font-weight: 500;\\n  text-align: left;\\n}\\n\\n.iconfix {\\n  top: 4px;\\n  position: relative;\\n  left: 5px;\\n  color: #00479d;\\n}\\n\\n.popover__content p {\\n  margin-bottom: 0px;\\n}\\n\\n.incerror {\\n  font-size: 75%;\\n  color: #f44336 !important;\\n  font-weight: 400;\\n}\\n\\n.mat-table > tbody > tr > td {\\n  z-index: 1 !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2phc2Jpci9EZXNrdG9wL1ByYWN0aWNlL25nZm9ybS9qYXBhbmlfZ2l0L2NtbGMtbWF0ZXJpYWwtbmV3L3NyYy9hcHAvY2FzZW1hbmFnZW1lbnQyL21hbmFnZW1lbnQyL21hbmFnZW1lbnQyLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9jYXNlbWFuYWdlbWVudDIvbWFuYWdlbWVudDIvbWFuYWdlbWVudDIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxpQkFBQTtFQUNBLGdCQUFBO0VBQ0Esa0JBQUE7QUNDRjs7QURHQTtFQUNFLFdBQUE7RUFDQSxlQUFBO0VBQ0EsbUJBQUE7QUNBRjs7QURFQTtFQUNFLGFBQUE7RUFDQSxrQkFBQTtBQ0NGOztBRENBO0VBQ0UsV0FBQTtFQUNBLGtCQUFBO0FDRUY7O0FEQ0Esb0JBQUE7O0FBRUE7RUFDRSxxQkFBQTtBQ0NGOztBREVBO0VBQ0UsZUFBQTtFQUNBLHFCQUFBO0VBQ0EsMEJBQUE7RUFDQSxnQkFBQTtBQ0NGOztBREVBO0VBQ0Usa0JBQUE7RUFDQSxxQkFBQTtBQ0NGOztBRENBO0VBQ0UsVUFBQTtFQUNBLGtCQUFBO0VBQ0Esa0JBQUE7RUFDQSxXQUFBO0VBQ0EsNkJBQUE7RUFDQSx5QkFBQTtFQUNBLDJCQUFBO0VBQ0EsMkNBQUE7RUFDQSxnQkFBQTtFQUNBLFNBQUE7RUFDQSxhQUFBO0FDRUY7O0FEQUE7RUFDRSxrQkFBQTtFQUNBLFNBQUE7RUFDQSxTQUFBO0VBQ0EsV0FBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0EsYUFBQTtFQUNBLHFCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxpQkFBQTtFQUNBLHdCQUFBO0VBQ0EsZ0NBQUE7RUFDQSw2QkFBQTtFQUNBLDZCQUFBO0VBQ0EsOEJBQUE7RUFDQSx5QkFBQTtFQUNBLDhCQUFBO0FDR0Y7O0FEREE7RUFDRSxhQUFBO0VBQ0EsVUFBQTtFQUNBLG1CQUFBO0VBQ0EsOEJBQUE7RUFDQSx5REFBQTtBQ0lGOztBREZBO0VBQ0UsNkJBQUE7RUFDQSxnQkFBQTtFQUNBLGdCQUFBO0FDS0Y7O0FESEE7RUFDRSxRQUFBO0VBQ0Esa0JBQUE7RUFDQSxTQUFBO0VBQ0EsY0FBQTtBQ01GOztBREpBO0VBQ0Usa0JBQUE7QUNPRjs7QURMQTtFQUNFLGNBQUE7RUFDQSx5QkFBQTtFQUNBLGdCQUFBO0FDUUY7O0FETEE7RUFDRSxxQkFBQTtBQ1FGIiwiZmlsZSI6InNyYy9hcHAvY2FzZW1hbmFnZW1lbnQyL21hbmFnZW1lbnQyL21hbmFnZW1lbnQyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRhdGF0YWJsZS1jb250YWluZXIge1xuICBtaW4taGVpZ2h0OiAwLjAxJTtcbiAgb3ZlcmZsb3cteDogYXV0bztcbiAgb3ZlcmZsb3cteTogaGlkZGVuO1xuICAvLyBoZWlnaHQ6IDQwNXB4O1xufVxuXG50YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG50YWJsZS5jYXNldGFibGUge1xuICB3aWR0aDogMjAwMHB4O1xuICBtYXgtd2lkdGg6IGluaGVyaXQ7XG59XG50ZC5tYXQtY29sdW1uLXN0YXIge1xuICB3aWR0aDogMjBweDtcbiAgcGFkZGluZy1yaWdodDogOHB4O1xufVxuXG4vKiBQb3BvdmVyIHN0eWxpbmcgKi9cblxuYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuLnBvcG92ZXJfX3RpdGxlIHtcbiAgZm9udC1zaXplOiAxNHB4O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuODcpO1xuICBmb250LXdlaWdodDogMTAwO1xufVxuXG4ucG9wb3Zlcl9fd3JhcHBlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuLnBvcG92ZXJfX2NvbnRlbnQge1xuICBvcGFjaXR5OiAwO1xuICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogLTY5cHg7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIDEwcHgpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmRmZGZkO1xuICBwYWRkaW5nOiAwLjVyZW0gMXJlbSAwIDFyZW07XG4gIGJveC1zaGFkb3c6IDAgMnB4IDVweCAwIHJnYmEoMCwgMCwgMCwgMC4yNik7XG4gIG1pbi13aWR0aDogMjcwcHg7XG4gIHRvcDogNTVweDtcbiAgei1pbmRleDogOTk5OTtcbn1cbi5wb3BvdmVyX19jb250ZW50OmJlZm9yZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogNTAlO1xuICB0b3A6IC04cHg7XG4gIGNvbnRlbnQ6ICcnO1xuICB3aWR0aDogMTVweDtcbiAgaGVpZ2h0OiAxNXB4O1xuICB6LWluZGV4OiA5OTk5O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIG1hcmdpbi1sZWZ0OiAtN3B4O1xuICB0cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XG4gIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICAtbW96LXRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIHJnYigyNDMsIDI0MCwgMjQwKTtcbiAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCByZ2IoMjQzLCAyNDAsIDI0MCk7XG4gIHRyYW5zaXRpb24tZHVyYXRpb246IDAuM3M7XG4gIHRyYW5zaXRpb24tcHJvcGVydHk6IHRyYW5zZm9ybTtcbn1cbi5wb3BvdmVyX193cmFwcGVyOmhvdmVyIC5wb3BvdmVyX19jb250ZW50IHtcbiAgei1pbmRleDogOTk5OTtcbiAgb3BhY2l0eTogMTtcbiAgdmlzaWJpbGl0eTogdmlzaWJsZTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCwgLTIwcHgpO1xuICB0cmFuc2l0aW9uOiBhbGwgMC41cyBjdWJpYy1iZXppZXIoMC43NSwgLTAuMDIsIDAuMiwgMC45Nyk7XG59XG4ucG9wb3Zlcl9fbWVzc2FnZSB7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGRkO1xuICBmb250LXdlaWdodDogNTAwO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuLmljb25maXgge1xuICB0b3A6IDRweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBsZWZ0OiA1cHg7XG4gIGNvbG9yOiAjMDA0NzlkO1xufVxuLnBvcG92ZXJfX2NvbnRlbnQgcCB7XG4gIG1hcmdpbi1ib3R0b206IDBweDtcbn1cbi5pbmNlcnJvciB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBjb2xvcjogI2Y0NDMzNiAhaW1wb3J0YW50O1xuICBmb250LXdlaWdodDogNDAwO1xufVxuXG4ubWF0LXRhYmxlID4gdGJvZHkgPiB0ciA+IHRkIHtcbiAgei1pbmRleDogMSAhaW1wb3J0YW50O1xuICBcbn0iLCIuZGF0YXRhYmxlLWNvbnRhaW5lciB7XG4gIG1pbi1oZWlnaHQ6IDAuMDElO1xuICBvdmVyZmxvdy14OiBhdXRvO1xuICBvdmVyZmxvdy15OiBoaWRkZW47XG59XG5cbnRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn1cblxudGFibGUuY2FzZXRhYmxlIHtcbiAgd2lkdGg6IDIwMDBweDtcbiAgbWF4LXdpZHRoOiBpbmhlcml0O1xufVxuXG50ZC5tYXQtY29sdW1uLXN0YXIge1xuICB3aWR0aDogMjBweDtcbiAgcGFkZGluZy1yaWdodDogOHB4O1xufVxuXG4vKiBQb3BvdmVyIHN0eWxpbmcgKi9cbmEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi5wb3BvdmVyX190aXRsZSB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjg3KTtcbiAgZm9udC13ZWlnaHQ6IDEwMDtcbn1cblxuLnBvcG92ZXJfX3dyYXBwZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLnBvcG92ZXJfX2NvbnRlbnQge1xuICBvcGFjaXR5OiAwO1xuICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogLTY5cHg7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKDAsIDEwcHgpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmRmZGZkO1xuICBwYWRkaW5nOiAwLjVyZW0gMXJlbSAwIDFyZW07XG4gIGJveC1zaGFkb3c6IDAgMnB4IDVweCAwIHJnYmEoMCwgMCwgMCwgMC4yNik7XG4gIG1pbi13aWR0aDogMjcwcHg7XG4gIHRvcDogNTVweDtcbiAgei1pbmRleDogOTk5OTtcbn1cblxuLnBvcG92ZXJfX2NvbnRlbnQ6YmVmb3JlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBsZWZ0OiA1MCU7XG4gIHRvcDogLThweDtcbiAgY29udGVudDogXCJcIjtcbiAgd2lkdGg6IDE1cHg7XG4gIGhlaWdodDogMTVweDtcbiAgei1pbmRleDogOTk5OTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICBtYXJnaW4tbGVmdDogLTdweDtcbiAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpO1xuICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbiAgLW1vei10cmFuc2Zvcm06IHJvdGF0ZSg0NWRlZyk7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZjNmMGYwO1xuICBib3JkZXItbGVmdDogMXB4IHNvbGlkICNmM2YwZjA7XG4gIHRyYW5zaXRpb24tZHVyYXRpb246IDAuM3M7XG4gIHRyYW5zaXRpb24tcHJvcGVydHk6IHRyYW5zZm9ybTtcbn1cblxuLnBvcG92ZXJfX3dyYXBwZXI6aG92ZXIgLnBvcG92ZXJfX2NvbnRlbnQge1xuICB6LWluZGV4OiA5OTk5O1xuICBvcGFjaXR5OiAxO1xuICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwLCAtMjBweCk7XG4gIHRyYW5zaXRpb246IGFsbCAwLjVzIGN1YmljLWJlemllcigwLjc1LCAtMC4wMiwgMC4yLCAwLjk3KTtcbn1cblxuLnBvcG92ZXJfX21lc3NhZ2Uge1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2RkZDtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbn1cblxuLmljb25maXgge1xuICB0b3A6IDRweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBsZWZ0OiA1cHg7XG4gIGNvbG9yOiAjMDA0NzlkO1xufVxuXG4ucG9wb3Zlcl9fY29udGVudCBwIHtcbiAgbWFyZ2luLWJvdHRvbTogMHB4O1xufVxuXG4uaW5jZXJyb3Ige1xuICBmb250LXNpemU6IDc1JTtcbiAgY29sb3I6ICNmNDQzMzYgIWltcG9ydGFudDtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbn1cblxuLm1hdC10YWJsZSA+IHRib2R5ID4gdHIgPiB0ZCB7XG4gIHotaW5kZXg6IDEgIWltcG9ydGFudDtcbn0iXX0= */\"","import {\n  Component,\n  OnInit,\n  AfterViewInit,\n  ChangeDetectorRef,\n  OnDestroy,\n  ViewChild,\n} from '@angular/core';\nimport { MediaObserver, MediaChange } from '@angular/flex-layout';\nimport { Subscription } from 'rxjs';\nimport { PageEvent } from '@angular/material/paginator';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport {MatSort, Sort} from '@angular/material/sort';\nimport {\n  FormGroup,\n  FormControl,\n  AbstractControl,\n  Validators,\n} from '@angular/forms';\nimport {\n  MomentDateAdapter,\n  MAT_MOMENT_DATE_ADAPTER_OPTIONS,\n} from '@angular/material-moment-adapter';\nimport {\n  DateAdapter,\n  MAT_DATE_FORMATS,\n  MAT_DATE_LOCALE,\n} from '@angular/material/core';\nimport * as _moment from 'moment';\n// import {default as _rollupMoment,  Moment} from 'moment';\nimport { MatCheckboxChange } from '@angular/material/checkbox';\nimport { TranslocoService } from '@ngneat/transloco';\n// const moment = _rollupMoment || _moment;\n\nexport const MY_FORMATS = {\n  parse: {\n    dateInput: 'L',\n  },\n  display: {\n    dateInput: 'YYYY-MM-DD',\n    monthYearLabel: 'YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'YYYY',\n  },\n};\n\n@Component({\n  selector: 'app-management',\n  templateUrl: './management2.component.html',\n  styleUrls: ['./management2.component.scss'],\n  providers: [\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\n    // application's root module. We provide it at the component level here, due to limitations of\n    // our example generation script.\n    {\n      provide: DateAdapter,\n      useClass: MomentDateAdapter,\n      deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS],\n    },\n\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\n  ],\n})\nexport class Management2Component implements OnInit, AfterViewInit, OnDestroy {\n  caseform: FormGroup;\n  // MatPaginator Inputs\n   length = 25 ;\n   pageSize = 5;\n   pageSizeOptions: number[] = [5, 10, 25];\n  //   // MatPaginator Output\n  //  pageEvent: PageEvent;\n\n  // new_renew =\"new\";\n  // classification =\"Contract Management\";\n  // contracttype =\"dummy1\";\n  // autoupdate=\"yes\";\n  inc_app_sec_member_error = false;\n  displayedColumns: string[] = [\n    'Controlnumber',\n    'BranchNumber',\n    'ApplicationDate',\n    'Status',\n    'ContractName',\n    'OtherParty',\n    'Applicantdivision',\n    'Applicationdepartment',\n    'Applicant',\n    'LegalRepresentative',\n    'Contractperiod',\n    'Contractperiodend',\n    'Automaticupdate',\n    'Relatedcountries',\n    'ProjectName',\n    'ContractType',\n    'Externalconsultation',\n    'Contracteditem',\n    'Newongoing',\n    'Alertreleasedate',\n    'Relatedcontractnumber',\n    'Expecteddateofconsultion',\n    'FIXContract',\n    'Approvaldecisionnumber',\n    'Managementstatus',\n    'Legaldepartmentreceptiondate',\n    'Legaldepartmentresponsedeadline'\n  ];\n  hideitem = true;\n  dataSource = new MatTableDataSource<CaseMangElement>(ELEMENT_DATA);\n  sortedData: CaseMangElement[];\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n  setPageSizeOptions(setPageSizeOptionsInput: string) {\n   \n    if (setPageSizeOptionsInput) {\n      this.pageSizeOptions = setPageSizeOptionsInput.split(',').map(str => +str);\n    }\n  }\n  private mediaSub: Subscription;\n  constructor(\n    private cdRef: ChangeDetectorRef,\n    private mediaObserver: MediaObserver,\n    private transloco: TranslocoService\n  ) {\n    this.dataSource = new MatTableDataSource<CaseMangElement>(ELEMENT_DATA.slice());\n    console.log('dataSource',  this.dataSource);\n  }\n \n  hideformele() {\n    this.hideitem = false;\n  }\n\n  showformele() {\n    this.hideitem = true;\n  }\n  sortData(sort: Sort) {\n    // const data = ELEMENT_DATA.slice();\n    console.log('dataSource1', new MatTableDataSource<CaseMangElement>(ELEMENT_DATA.slice()));\n    if (!sort.active || sort.direction === '') {\n      // this.sortedData = data;\n      this.dataSource = new MatTableDataSource<CaseMangElement>(ELEMENT_DATA.slice());\n      return;\n    }\n\n    this.dataSource = new MatTableDataSource<CaseMangElement>(ELEMENT_DATA.sort((a, b) => {\n      const isAsc = sort.direction === 'asc';\n      switch (sort.active) {\n        case 'Controlnumber': return compare(a.Controlnumber, b.Controlnumber, isAsc);\n        case 'BranchNumber': return compare(a.BranchNumber, b.BranchNumber, isAsc);\n        case 'ApplicationDate': return compare(a.ApplicationDate, b.ApplicationDate, isAsc);\n        case 'Status': return compare(a.Status, b.Status, isAsc);\n        case 'ContractName': return compare(a.ContractName, b.ContractName, isAsc);\n        case 'OtherParty': return compare(a.OtherParty, b.OtherParty, isAsc);\n\n        case 'Applicantdivision': return compare(a.Applicantdivision, b.Applicantdivision, isAsc);\n        case 'Applicationdepartment': return compare(a.Applicationdepartment, b.Applicationdepartment, isAsc);\n        case 'Applicant': return compare(a.Applicant, b.Applicant, isAsc);\n        case 'LegalRepresentative': return compare(a.LegalRepresentative, b.LegalRepresentative, isAsc);\n        case 'Contractperiod': return compare(a.Contractperiod, b.Contractperiod, isAsc);\n        case 'Contractperiodend': return compare(a.Contractperiodend, b.Contractperiodend, isAsc);\n\n        case 'Automaticupdate': return compare(a.Automaticupdate, b.Automaticupdate, isAsc);\n        case 'Relatedcountries': return compare(a.Relatedcountries, b.Relatedcountries, isAsc);\n        case 'ProjectName': return compare(a.ProjectName, b.ProjectName, isAsc);\n        case 'ContractType': return compare(a.ContractType, b.ContractType, isAsc);\n        case 'Externalconsultation': return compare(a.Externalconsultation, b.Externalconsultation, isAsc);\n        case 'Contracteditem': return compare(a.Contracteditem, b.Contracteditem, isAsc);\n\n        case 'Newongoing': return compare(a.Newongoing, b.Newongoing, isAsc);\n        case 'Alertreleasedate': return compare(a.Alertreleasedate, b.Alertreleasedate, isAsc);\n        case 'Relatedcontractnumber': return compare(a.Relatedcontractnumber, b.Relatedcontractnumber, isAsc);\n        case 'Expecteddateofconsultion': return compare(a.Expecteddateofconsultion, b.Expecteddateofconsultion, isAsc);\n        case 'FIXContract': return compare(a.FIXContract, b.FIXContract, isAsc);\n        case 'Approvaldecisionnumber': return compare(a.Approvaldecisionnumber, b.Approvaldecisionnumber, isAsc);\n        case 'Managementstatus': return compare(a.Managementstatus, b.Managementstatus, isAsc);\n        case 'Legaldepartmentreceptiondate': return compare(a.Legaldepartmentreceptiondate, b.Legaldepartmentreceptiondate, isAsc);\n        case 'Legaldepartmentresponsedeadline': return compare(a.Legaldepartmentresponsedeadline, b.Legaldepartmentresponsedeadline, isAsc);\n\n        default: return 0;\n      }\n    }));\n    this.dataSource.paginator = this.paginator;\n    // this.pageSizeOptions = setPageSizeOptionsInput.split(',').map(str => +str);\n    //this.paginator.pageIndex = 0\n  }\n\n \n  setActiveLang(lang: string) {\n    this.transloco.setActiveLang(lang);\n  }\n  ngOnInit() {\n    // this.length = ELEMENT_DATA.length;\n\n    this.dataSource.paginator = this.paginator;\n    this.caseform = new FormGroup({\n      classification: new FormControl('', Validators.required),\n      controlnumber: new FormControl(''),\n      recpdate: new FormControl(''),\n      appdate: new FormControl('', [Validators.required, this.dateValidator]),\n      appdept: new FormControl(''),\n      applicant: new FormControl('', Validators.required),\n      contractname: new FormControl(''),\n      contracteditem: new FormControl(''),\n      inc_app_sec_memberyes: new FormControl(''),\n      inc_app_sec_memberno: new FormControl(''),\n      new_renew: new FormControl(''),\n      autoupdate: new FormControl(''),\n      contracttype: new FormControl('', Validators.required),\n      contractor: new FormControl(''),\n      begcontperiod: new FormControl(''),\n      endcontperiod: new FormControl(''),\n      legelrep: new FormControl(''),\n      fix_ver_contract_att: new FormControl(''),\n      exsist_extr_consult: new FormControl(''),\n      legel_dept_notes: new FormControl(''),\n      status_creating: new FormControl(''),\n      status_receiving: new FormControl(''),\n      status_app_responding: new FormControl(''),\n      status_contract_signed: new FormControl(''),\n      status_cancelled: new FormControl(''),\n      status_requesting: new FormControl(''),\n      status_correspond_legl_dept: new FormControl(''),\n      status_resp_legl_dept: new FormControl(''),\n      status_completed: new FormControl(''),\n      country_us: new FormControl(''),\n      country_china: new FormControl(''),\n      country_korea: new FormControl(''),\n      country_europe: new FormControl(''),\n      country_tiwan: new FormControl(''),\n      country_india: new FormControl(''),\n      country_others: new FormControl(''),\n    });\n    this.mediaSub = this.mediaObserver.asObservable().subscribe((change) => {\n      change.forEach((v) => {\n        console.log(v.mediaQuery, v.mqAlias);\n      });\n      console.log('-----');\n    });\n  }\n  show_inc_app_sec(event: MatCheckboxChange): void {\n    console.log(event.checked);\n    if (\n      !!this.caseform.value.inc_app_sec_memberno === true ||\n      !!this.caseform.value.inc_app_sec_memberyes === true\n    ) {\n      this.inc_app_sec_member_error = false;\n    } else {\n      this.inc_app_sec_member_error = true;\n    }\n  }\n  onSubmit() {\n    if (\n      !!this.caseform.value.inc_app_sec_memberno === true ||\n      !!this.caseform.value.inc_app_sec_memberyes === true\n    ) {\n      this.inc_app_sec_member_error = false;\n    } else {\n      this.inc_app_sec_member_error = true;\n    }\n    console.log(this.caseform);\n    // console.log(\"aa\",!!this.caseform.value.inc_app_sec_memberno);\n    // console.log(\"bb\",!!this.caseform.value.inc_app_sec_memberyes);\n  }\n\n  dateValidator(c: AbstractControl): { [key: string]: boolean } {\n    let value = c.value;\n    if (value && typeof value === 'string') {\n      let match = value.match(/^[0-9]{4}[\\/][0-9]{2}[\\/][0-9]{2}$/);\n      if (!match) {\n        return { dateInvalid: true };\n      } else if (match && match[0] !== value) {\n        return { dateInvalid: true };\n      }\n    }\n    return null;\n  }\n\n  ngAfterViewInit() {\n    this.cdRef.detectChanges();\n \n  }\n\n  ngOnDestroy() {\n    if (this.mediaSub) {\n      this.mediaSub.unsubscribe();\n    }\n  }\n}\n\nexport interface CaseMangElement {\n  Controlnumber: number,\n  BranchNumber: number,\n  ApplicationDate: string,\n  Status: string,\n  ContractName: string,\n  OtherParty: string,\n  \n  Applicantdivision: string,\n  Applicationdepartment: string,\n  Applicant: string,\n  LegalRepresentative: string,\n  Contractperiod: string,\n  Contractperiodend: string,\n  Automaticupdate: string,\n  Relatedcountries: string,\n  ProjectName: string,\n  ContractType: string,\n  Externalconsultation: string,\n  Contracteditem: string,\n  Newongoing: string,\n  Alertreleasedate: string,\n  Relatedcontractnumber: string,\n  Expecteddateofconsultion: string,\n  FIXContract: string,\n  Approvaldecisionnumber: string,\n  Managementstatus: string,\n  Legaldepartmentreceptiondate: string,\n  Legaldepartmentresponsedeadline: string\n}\n\n\nconst ELEMENT_DATA: CaseMangElement[] = [\n  {\n    Controlnumber: 1,\n    BranchNumber: 2,\n    ApplicationDate: '2020/05/19',\n    Status: 'Yes',\n    ContractName: 'Dummy Text',\n    OtherParty: 'Dummy Text',\n    \n    Applicantdivision: 'Division',\n    Applicationdepartment: 'Department',\n    Applicant: 'Dummy Text',\n    LegalRepresentative: 'Dummy Text',\n    Contractperiod: '2020/05/25',\n    Contractperiodend: '2020/05/25',\n    Automaticupdate: 'Yes',\n    Relatedcountries: 'Japan, Poland',\n    ProjectName: 'non disclosure contract',\n    ContractType: 'Dummy Text',\n    Externalconsultation: 'Dummy Text',\n    Contracteditem: 'aaa',\n    Newongoing: 'on going',\n    Alertreleasedate: '2020/05/19',\n    Relatedcontractnumber: '1',\n    Expecteddateofconsultion:\t'2020/05/19',\n    FIXContract: 'Yes',\n    Approvaldecisionnumber:'2',\n    Managementstatus: 'Others',\n    Legaldepartmentreceptiondate: '2020/05/19',\n    Legaldepartmentresponsedeadline: '2020/05/19'\n  },\n  {\n    Controlnumber: 1,\n    BranchNumber: 3,\n    ApplicationDate: '2020/05/19',\n    Status: 'Yes',\n    ContractName: 'Dummy Text',\n    OtherParty: 'Dummy Text',\n    \n    Applicantdivision: 'Division',\n    Applicationdepartment: 'Department',\n    Applicant: 'Dummy Text',\n    LegalRepresentative: 'Dummy Text',\n    Contractperiod: '2020/05/25',\n    Contractperiodend: '2020/05/25',\n    Automaticupdate: 'Yes',\n    Relatedcountries: 'Japan, Poland',\n    ProjectName: 'non disclosure contract',\n    ContractType: 'Dummy Text',\n    Externalconsultation: 'Dummy Text',\n    Contracteditem: 'aaa',\n    Newongoing: 'on going',\n    Alertreleasedate: '2020/05/19',\n    Relatedcontractnumber: '1',\n    Expecteddateofconsultion:\t'2020/05/19',\n    FIXContract: 'Yes',\n    Approvaldecisionnumber:'2',\n    Managementstatus: 'Others',\n    Legaldepartmentreceptiondate: '2020/05/19',\n    Legaldepartmentresponsedeadline: '2020/05/19'\n  },\n  {\n    Controlnumber: 1,\n    BranchNumber: 2,\n    ApplicationDate: '2020/05/19',\n    Status: 'Yes',\n    ContractName: 'Dummy Text',\n    OtherParty: 'Dummy Text',\n    \n    Applicantdivision: 'Division',\n    Applicationdepartment: 'Department',\n    Applicant: 'Dummy Text',\n    LegalRepresentative: 'Dummy Text',\n    Contractperiod: '2020/05/25',\n    Contractperiodend: '2020/05/25',\n    Automaticupdate: 'Yes',\n    Relatedcountries: 'Japan, Poland',\n    ProjectName: 'non disclosure contract',\n    ContractType: 'Dummy Text',\n    Externalconsultation: 'Dummy Text',\n    Contracteditem: 'aaa',\n    Newongoing: 'on going',\n    Alertreleasedate: '2020/05/19',\n    Relatedcontractnumber: '1',\n    Expecteddateofconsultion:\t'2020/05/19',\n    FIXContract: 'Yes',\n    Approvaldecisionnumber:'2',\n    Managementstatus: 'Others',\n    Legaldepartmentreceptiondate: '2020/05/19',\n    Legaldepartmentresponsedeadline: '2020/05/19'\n  },\n  {\n    Controlnumber: 1,\n    BranchNumber: 4,\n    ApplicationDate: '2020/05/19',\n    Status: 'Yes',\n    ContractName: 'Dummy Text',\n    OtherParty: 'Dummy Text',\n    \n    Applicantdivision: 'Division',\n    Applicationdepartment: 'Department',\n    Applicant: 'Dummy Text',\n    LegalRepresentative: 'Dummy Text',\n    Contractperiod: '2020/05/25',\n    Contractperiodend: '2020/05/25',\n    Automaticupdate: 'Yes',\n    Relatedcountries: 'Japan, Poland',\n    ProjectName: 'non disclosure contract',\n    ContractType: 'Dummy Text',\n    Externalconsultation: 'Dummy Text',\n    Contracteditem: 'aaa',\n    Newongoing: 'on going',\n    Alertreleasedate: '2020/05/19',\n    Relatedcontractnumber: '1',\n    Expecteddateofconsultion:\t'2020/05/19',\n    FIXContract: 'Yes',\n    Approvaldecisionnumber:'2',\n    Managementstatus: 'Others',\n    Legaldepartmentreceptiondate: '2020/05/19',\n    Legaldepartmentresponsedeadline: '2020/05/19'\n  },\n  {\n    Controlnumber: 1,\n    BranchNumber: 2,\n    ApplicationDate: '2020/05/19',\n    Status: 'Yes',\n    ContractName: 'Dummy Text',\n    OtherParty: 'Dummy Text',\n    \n    Applicantdivision: 'Division',\n    Applicationdepartment: 'Department',\n    Applicant: 'Dummy Text',\n    LegalRepresentative: 'Dummy Text',\n    Contractperiod: '2020/05/25',\n    Contractperiodend: '2020/05/25',\n    Automaticupdate: 'Yes',\n    Relatedcountries: 'Japan, Poland',\n    ProjectName: 'non disclosure contract',\n    ContractType: 'Dummy Text',\n    Externalconsultation: 'Dummy Text',\n    Contracteditem: 'aaa',\n    Newongoing: 'on going',\n    Alertreleasedate: '2020/05/19',\n    Relatedcontractnumber: '1',\n    Expecteddateofconsultion:\t'2020/05/19',\n    FIXContract: 'Yes',\n    Approvaldecisionnumber:'2',\n    Managementstatus: 'Others',\n    Legaldepartmentreceptiondate: '2020/05/19',\n    Legaldepartmentresponsedeadline: '2020/05/19'\n  },\n  {\n    Controlnumber: 1,\n    BranchNumber: 2,\n    ApplicationDate: '2020/05/19',\n    Status: 'Yes',\n    ContractName: 'Dummy Text',\n    OtherParty: 'Dummy Text',\n    \n    Applicantdivision: 'Division',\n    Applicationdepartment: 'Department',\n    Applicant: 'Dummy Text',\n    LegalRepresentative: 'Dummy Text',\n    Contractperiod: '2020/05/25',\n    Contractperiodend: '2020/05/25',\n    Automaticupdate: 'Yes',\n    Relatedcountries: 'Japan, Poland',\n    ProjectName: 'non disclosure contract',\n    ContractType: 'Dummy Text',\n    Externalconsultation: 'Dummy Text',\n    Contracteditem: 'aaa',\n    Newongoing: 'on going',\n    Alertreleasedate: '2020/05/19',\n    Relatedcontractnumber: '1',\n    Expecteddateofconsultion:\t'2020/05/19',\n    FIXContract: 'Yes',\n    Approvaldecisionnumber:'2',\n    Managementstatus: 'Others',\n    Legaldepartmentreceptiondate: '2020/05/19',\n    Legaldepartmentresponsedeadline: '2020/05/19'\n  },\n  {\n    Controlnumber: 1,\n    BranchNumber: 2,\n    ApplicationDate: '2020/05/19',\n    Status: 'Yes',\n    ContractName: 'Dummy Text',\n    OtherParty: 'Dummy Text',\n    \n    Applicantdivision: 'Division',\n    Applicationdepartment: 'Department',\n    Applicant: 'Dummy Text',\n    LegalRepresentative: 'Dummy Text',\n    Contractperiod: '2020/05/25',\n    Contractperiodend: '2020/05/25',\n    Automaticupdate: 'Yes',\n    Relatedcountries: 'Japan, Poland',\n    ProjectName: 'non disclosure contract',\n    ContractType: 'Dummy Text',\n    Externalconsultation: 'Dummy Text',\n    Contracteditem: 'aaa',\n    Newongoing: 'on going',\n    Alertreleasedate: '2020/05/19',\n    Relatedcontractnumber: '1',\n    Expecteddateofconsultion:\t'2020/05/19',\n    FIXContract: 'Yes',\n    Approvaldecisionnumber:'2',\n    Managementstatus: 'Others',\n    Legaldepartmentreceptiondate: '2020/05/19',\n    Legaldepartmentresponsedeadline: '2020/05/19'\n  },\n  {\n    Controlnumber: 1,\n    BranchNumber: 2,\n    ApplicationDate: '2020/05/19',\n    Status: 'Yes',\n    ContractName: 'Dummy Text',\n    OtherParty: 'Dummy Text',\n    \n    Applicantdivision: 'Division',\n    Applicationdepartment: 'Department',\n    Applicant: 'Dummy Text',\n    LegalRepresentative: 'Dummy Text',\n    Contractperiod: '2020/05/25',\n    Contractperiodend: '2020/05/25',\n    Automaticupdate: 'Yes',\n    Relatedcountries: 'Japan, Poland',\n    ProjectName: 'non disclosure contract',\n    ContractType: 'Dummy Text',\n    Externalconsultation: 'Dummy Text',\n    Contracteditem: 'aaa',\n    Newongoing: 'on going',\n    Alertreleasedate: '2020/05/19',\n    Relatedcontractnumber: '1',\n    Expecteddateofconsultion:\t'2020/05/19',\n    FIXContract: 'Yes',\n    Approvaldecisionnumber:'2',\n    Managementstatus: 'Others',\n    Legaldepartmentreceptiondate: '2020/05/19',\n    Legaldepartmentresponsedeadline: '2020/05/19'\n  },\n  \n\n];\n\nfunction compare(a: number | string, b: number | string, isAsc: boolean) {\n  console.log('sorted data', (a < b ? -1 : 1) * (isAsc ? 1 : -1));\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}"]}